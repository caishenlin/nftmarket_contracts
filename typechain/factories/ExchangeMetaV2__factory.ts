/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExchangeMetaV2,
  ExchangeMetaV2Interface,
} from "../ExchangeMetaV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "__ExchangeV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct GhostMarketRoyalties.Royalty[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506145d2806100206000396000f3fe6080604052600436106100e45760003560e01c806302097ab1146100e95780630c53c51c146101365780631cdfe3d81461015657806320158c44146101785780632d0335ab146101b457806330c642f1146101eb5780633408e4701461020b5780633abf6fd41461021e578063715018a61461023f57806376f64a1d14610254578063787dce3d146102745780638da5cb5b14610294578063b0e21e8a146102a9578063b39deb46146102c0578063bb3bafd6146102e0578063e2864fe31461030e578063e66db25e1461032e578063e99a3f801461034e578063f2fde38b14610361575b600080fd5b3480156100f557600080fd5b506101206101043660046139d9565b610163602052600090815260409020546001600160a01b031681565b60405161012d9190613f76565b60405180910390f35b610149610144366004613a76565b610381565b60405161012d91906140cd565b34801561016257600080fd5b506101766101713660046139d9565b610608565b005b34801561018457600080fd5b506101a6610193366004613bd2565b61012f6020526000908152604090205481565b60405190815260200161012d565b3480156101c057600080fd5b506101a66101cf3660046139d9565b6001600160a01b03166000908152610192602052604090205490565b3480156101f757600080fd5b50610176610206366004613c06565b61066a565b34801561021757600080fd5b50466101a6565b34801561022a57600080fd5b5061016254610120906001600160a01b031681565b34801561024b57600080fd5b50610176610717565b34801561026057600080fd5b5061017661026f366004613c23565b61078e565b34801561028057600080fd5b5061017661028f366004613bd2565b6108da565b3480156102a057600080fd5b5061012061091f565b3480156102b557600080fd5b506101a66101615481565b3480156102cc57600080fd5b506101766102db366004613c06565b61092e565b3480156102ec57600080fd5b506103016102fb366004613bd2565b50606090565b60405161012d9190613fb6565b34801561031a57600080fd5b50610176610329366004613db7565b6109cf565b34801561033a57600080fd5b50610176610349366004613a3e565b610ae7565b61017661035c366004613de9565b610b55565b34801561036d57600080fd5b5061017661037c3660046139d9565b610ce2565b6060600061038e86610dd0565b90506000356001600160e01b0319908116908216141561041b5760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f6400000060648201526084015b60405180910390fd5b604080516060810182526001600160a01b03891660008181526101926020908152908490205483528201529081018790526104598882888888610dec565b6104af5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b6064820152608401610412565b6001600160a01b038816600090815261019260205260409020546104d4906001610ebc565b6001600160a01b03891660009081526101926020908152604080832093909355915190918291309161050a918c918e9101613f29565b60408051601f198184030181529082905261052491613f0d565b6000604051808303816000865af19150503d8060008114610561576040519150601f19603f3d011682016040523d82523d6000602084013e610566565b606091505b509150915061057481610ed1565b816105c05760405162461bcd60e51b815260206004820152601c60248201527b119d5b98dd1a5bdb8818d85b1b081b9bdd081cdd58d8d95cdcd99d5b60221b6044820152606401610412565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8a338b6040516105f393929190613f8a565b60405180910390a19998505050505050505050565b610610610f17565b6001600160a01b031661062161091f565b6001600160a01b0316146106475760405162461bcd60e51b8152600401610412906141a4565b61016280546001600160a01b0319166001600160a01b0392909216919091179055565b610672610f17565b6001600160a01b031661068361091f565b6001600160a01b0316146106a95760405162461bcd60e51b8152600401610412906141a4565b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c31535939061070b908490613f76565b60405180910390a25050565b61071f610f17565b6001600160a01b031661073061091f565b6001600160a01b0316146107565760405162461bcd60e51b8152600401610412906141a4565b6033546040516000916001600160a01b03169060008051602061451d833981519152908390a3603380546001600160a01b0319169055565b600054610100900460ff16806107a7575060005460ff16155b6107c35760405162461bcd60e51b815260040161041290614156565b600054610100900460ff161580156107e5576000805461ffff19166101011790555b6107ed610f26565b6107f5610f91565b609760205260008051602061449a83398151915280546001600160a01b038681166001600160a01b0319928316179092556000805160206144fd83398151915280549288169282168317905563025ceed960e61b60005260008051602061453d8339815191528054909116909117905561086f8383611042565b6108776110d2565b6108c16040518060400160405280600f81526020016e23b437b9ba22bc31b430b733b2ab1960891b815250604051806040016040528060018152602001603160f81b81525061116f565b80156108d3576000805461ff00191690555b5050505050565b6108e2610f17565b6001600160a01b03166108f361091f565b6001600160a01b0316146109195760405162461bcd60e51b8152600401610412906141a4565b61016155565b6033546001600160a01b031690565b610936610f17565b6001600160a01b031661094761091f565b6001600160a01b03161461096d5760405162461bcd60e51b8152600401610412906141a4565b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f9061070b908490613f76565b6109d8336111ca565b80516001600160a01b03166109eb610f17565b6001600160a01b031614610a2f5760405162461bcd60e51b815260206004820152600b60248201526a3737ba10309036b0b5b2b960a91b6044820152606401610412565b6080810151610a775760405162461bcd60e51b81526020600482015260146024820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b6044820152606401610412565b6000610a828261120d565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e93610adb938693929161400e565b60405180910390a15050565b610aef610f17565b6001600160a01b0316610b0061091f565b6001600160a01b031614610b265760405162461bcd60e51b8152600401610412906141a4565b6001600160a01b0391821660009081526101636020526040902080546001600160a01b03191691909216179055565b610b826040518060400160405280600b81526020016a36b9b39739b2b73232b91d60a91b8152503361127d565b610bae6040518060400160405280600a81526020016936b9b3973b30b63ab29d60b11b815250346112c6565b610bb8848461130b565b610bc2828261130b565b60408401516001600160a01b031615610c4a5783604001516001600160a01b031682600001516001600160a01b031614610c4a5760405162461bcd60e51b815260206004820152602360248201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696044820152621b195960ea1b6064820152608401610412565b60408201516001600160a01b031615610cd25783600001516001600160a01b031682604001516001600160a01b031614610cd25760405162461bcd60e51b8152602060048201526024808201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616044820152631a5b195960e21b6064820152608401610412565b610cdc848361131e565b50505050565b610cea610f17565b6001600160a01b0316610cfb61091f565b6001600160a01b031614610d215760405162461bcd60e51b8152600401610412906141a4565b6001600160a01b038116610d865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610412565b6033546040516001600160a01b0380841692169060008051602061451d83398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6000815160001415610de457506000919050565b506020015190565b6000806001610e02610dfd886115c9565b611629565b84878760405160008152602001604052604051610e22949392919061409a565b6020604051602081039080840390855afa158015610e44573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e9b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610412565b866001600160a01b0316816001600160a01b03161491505095945050505050565b6000610ec8828461436d565b90505b92915050565b610f1481604051602401610ee591906140cd565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052611647565b50565b6000610f21611668565b905090565b600054610100900460ff1680610f3f575060005460ff16155b610f5b5760405162461bcd60e51b815260040161041290614156565b600054610100900460ff16158015610f7d576000805461ffff19166101011790555b8015610f14576000805461ff001916905550565b600054610100900460ff1680610faa575060005460ff16155b610fc65760405162461bcd60e51b815260040161041290614156565b600054610100900460ff16158015610fe8576000805461ffff19166101011790555b6000610ff2610f17565b603380546001600160a01b0319166001600160a01b0383169081179091556040519192509060009060008051602061451d833981519152908290a3508015610f14576000805461ff001916905550565b600054610100900460ff168061105b575060005460ff16155b6110775760405162461bcd60e51b815260040161041290614156565b600054610100900460ff16158015611099576000805461ffff19166101011790555b61016183905561016280546001600160a01b0319166001600160a01b03841617905580156110cd576000805461ff00191690555b505050565b600054610100900460ff16806110eb575060005460ff16155b6111075760405162461bcd60e51b815260040161041290614156565b600054610100900460ff16158015611129576000805461ffff19166101011790555b610f7d6040518060400160405280600b81526020016a11da1bdcdd13585c9ad95d60aa1b815250604051806040016040528060018152602001601960f91b8152506116c5565b60008051602061457d833981519152828051906020012082805190602001206111954690565b6040516111aa94939291903090602001614055565b60408051601f198184030181529190528051602090910120610193555050565b610f14816040516024016111de9190613f76565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052611647565b8051602082015151600091906112229061174f565b6060840151516112319061174f565b608080860151604080516001600160a01b039096166020870152850193909352606084019190915282015260a0015b604051602081830303815290604052805190602001209050919050565b6112c2828260405160240161129392919061410a565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611647565b5050565b6112c282826040516024016112dc929190614134565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611647565b611314826117ac565b6112c2828261186a565b60008061132b8484611a1f565b91509150600061133a8561120d565b905060006113478561120d565b600083815261012f60205260408082205483835290822054929350919061137089898585611ab8565b905060008160200151116113b85760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b6044820152606401610412565b6000806113c88989858e8e611b3c565b8a5191935091506001600160e01b0319166355575f5d60e11b141561145857813410156114375760405162461bcd60e51b815260206004820152601d60248201527f6d616b653a206e6f7420656e6f756768204261736543757272656e63790000006044820152606401610412565b813411156114535761145361144c83346143c4565b3390611c71565b6114d7565b87516001600160e01b0319166355575f5d60e11b14156114d757803410156114c25760405162461bcd60e51b815260206004820152601d60248201527f74616b653a206e6f7420656e6f756768204261736543757272656e63790000006044820152606401610412565b803411156114d7576114d761144c82346143c4565b60006114e1610f17565b90508b600001516001600160a01b0316816001600160a01b03161461152057602084015161150f908761436d565b600089815261012f60205260409020555b8a516001600160a01b03828116911614611551578351611540908661436d565b600088815261012f60205260409020555b8b518b516020868101518751604080518e81529384018d90526001600160a01b0395861684820152949093166060830152608082015260a081019190915290517f0c0792d64a63025aad5946328f2bee95ed6f94d57160e5449513ecd215a074a69181900360c00190a1505050505050505050505050565b60006040518060800160405280604381526020016144ba6043913980516020918201208351848301516040808701518051908601209051611260950193845260208401929092526001600160a01b03166040830152606082015260800190565b60006116356101935490565b82604051602001611260929190613f5b565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000333014156116bf57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506116c29050565b50335b90565b600054610100900460ff16806116de575060005460ff16155b6116fa5760405162461bcd60e51b815260040161041290614156565b600054610100900460ff1615801561171c576000805461ffff19166101011790555b825160208085019190912083519184019190912060c99190915560ca5580156110cd576000805461ff0019169055505050565b8051602080830151805190820120604051600093611260937f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c939192019283526001600160e01b0319919091166020830152604082015260600190565b60a081015115806117c05750428160a00151105b61180c5760405162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c65640000006044820152606401610412565b60c081015115806118205750428160c00151115b610f145760405162461bcd60e51b815260206004820152601b60248201527a13dc99195c88195b99081d985b1a59185d1a5bdb8819985a5b1959602a1b6044820152606401610412565b81516001600160a01b031661187d610f17565b6001600160a01b0316146112c257600061189683611d25565b83519091506001600160a01b03163b156119a0578251630b135d3f60e11b906001600160a01b0316631626ba7e6118cc84611dfd565b856040518363ffffffff1660e01b81526004016118ea929190614081565b60206040518083038186803b15801561190257600080fd5b505afa158015611916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193a9190613bea565b6001600160e01b031916146110cd5760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163743a207369676e617475726520766572696669636174696f6e6044820152651032b93937b960d11b6064820152608401610412565b82516001600160a01b03166119be836119b884611dfd565b90611ece565b6001600160a01b0316146110cd5760405162461bcd60e51b815260206004820152602260248201527f557365723a207369676e617475726520766572696669636174696f6e2065727260448201526137b960f11b6064820152608401610412565b611a276136ea565b611a2f6136ea565b602084015151606084015151611a459190611f7a565b80519092506001600160e01b031916611a705760405162461bcd60e51b8152600401610412906141d9565b606084015151602084015151611a869190611f7a565b80519091506001600160e01b031916611ab15760405162461bcd60e51b8152600401610412906141d9565b9250929050565b611ac0613702565b600080611acd8786611fba565b91509150600080611ade8887611fba565b9150915083811115611b1157611b0684848a60200151602001518b6060015160200151611ffe565b945050505050611b34565b611b2d8960200151602001518a60600151602001518484612079565b9450505050505b949350505050565b6000806000611b53886000015188600001516120f6565b86516020880151909450925090506000611b6c866121c7565b90506000611b79866121c7565b90506001836002811115611b9d57634e487b7160e01b600052602160045260246000fd5b1415611bf25787518751611bc4919084848e8e60008051602061447a83398151915261227d565b9450611bed8989602001518860000151856000015160008051602061455d8339815191526122f9565b611c64565b6002836002811115611c1457634e487b7160e01b600052602160045260246000fd5b1415611c6457611c3f8860200151876000015183858d8f60008051602061455d83398151915261227d565b885188518351929650611c64928d92919060008051602061447a8339815191526122f9565b5050509550959350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611cbe576040519150601f19603f3d011682016040523d82523d6000602084013e611cc3565b606091505b50509050806110cd5760405162461bcd60e51b815260206004820152602860248201527f4c69625472616e73666572204261736543757272656e6379207472616e7366656044820152671c8819985a5b195960c21b6064820152608401610412565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d8260000151611d5a8460200151612479565b8460400151611d6c8660600151612479565b608087015160a088015160c089015160e08a01516101008b015180516020918201206040516112609b9a999897969594939201998a526001600160a01b0398891660208b015260408a0197909752949096166060880152608087019290925260a086015260c085015260e08401929092526001600160e01b0319919091166101008301526101208201526101400190565b604080518082018252600b81526a11da1bdcdd13585c9ad95d60aa1b6020918201528151808301835260018152601960f91b9082015290516000917ff7645354abf2b8319c9979d69e838e27128975fec6da6f7d8206f207bba6d37b917fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a59160008051602061457d833981519152918591611ea2918491879187914691309101614055565b604051602081830303815290604052805190602001209050611ec481876124cf565b9695505050505050565b600080600080845160411415611ef85750505060208201516040830151606084015160001a611f6e565b845160401415611f265750505060408201516020830151906001600160ff1b0381169060ff1c601b01611f6e565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610412565b611ec486828585612502565b611f826136ea565b6000611f8e848461268f565b80519091506001600160e01b031916611fb357611fab838561268f565b915050610ecb565b9050610ecb565b600080611fd8838560600151602001516128d590919063ffffffff16565b9050611ff5846020015160200151856060015160200151836128e1565b91509250929050565b612006613702565b60006120138585856128e1565b9050858111156120605760405162461bcd60e51b8152602060048201526018602482015277199a5b1b1319599d0e881d5b98589b19481d1bc8199a5b1b60421b6044820152606401610412565b5050604080518082019091529384525050602082015290565b612081613702565b600061208e8387876128e1565b9050838111156120dc5760405162461bcd60e51b8152602060048201526019602482015278199a5b1b149a59da1d0e881d5b98589b19481d1bc8199a5b1b603a1b6044820152606401610412565b604080518082019091529283526020830152509392505050565b60006001600160e01b031983166355575f5d60e11b141561211957506001610ecb565b6001600160e01b031982166355575f5d60e11b141561213a57506002610ecb565b6001600160e01b031983166322ba176160e21b141561215b57506001610ecb565b6001600160e01b031982166322ba176160e21b141561217c57506002610ecb565b6001600160e01b0319831663025ceed960e61b141561219d57506001610ecb565b6001600160e01b0319821663025ceed960e61b14156121be57506002610ecb565b50600092915050565b6121cf61371c565b60e08201516001600160e01b031916632611a13360e11b1415612218576121fa826101000151612940565b805151909150612213578151612210908261295c565b90505b919050565b60e08201516001600160e01b0319908116141561223b578151612210908261295c565b60405162461bcd60e51b8152602060048201526017602482015276556e6b6e6f776e204f726465722064617461207479706560481b6044820152606401610412565b600061229188610161548860200151612a31565b905060006122a2828a8a8887612ac2565b90506122b28585838c8c88612bab565b90506122c685828b8a602001518c88612cfa565b90506122da85828b89602001518c88612cfa565b90506122ed85828a8960000151876122f9565b50979650505050505050565b6000805b835181101561241f57600061234f85838151811061232b57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b031688612dd890919063ffffffff16565b905061239885838151811061237457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b031684610ebc90919063ffffffff16565b9250801561240c5761240c60405180604001604052808a815260200183815250878785815181106123d957634e487b7160e01b600052603260045260246000fd5b602002602001015160000151877fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e612dea565b508061241781614407565b9150506122fd565b5080612710146124715760405162461bcd60e51b815260206004820152601e60248201527f53756d207061796f75747320427073206e6f7420657175616c203130302500006044820152606401610412565b505050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b086124a9836000015161174f565b602080850151604051611260949392019283526020830191909152604082015260600190565b600082826040516020016124e4929190613f5b565b60405160208183030381529060405280519060200120905092915050565b60006fa2a8918ca85bafe22016d0b997e4df60600160ff1b038211156125755760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610412565b8360ff16601b148061258a57508360ff16601c145b6125e15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610412565b600060018686868660405160008152602001604052604051612606949392919061409a565b6020604051602081039080840390855afa158015612628573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126865760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610412565b95945050505050565b6126976136ea565b825182516001600160e01b031982166355575f5d60e11b1415612702576001600160e01b031981166355575f5d60e11b14156126d7578492505050610ecb565b5050604080518082018252600080825282516020818101909452908152918101919091529050610ecb565b6001600160e01b031982166322ba176160e21b1415612747576001600160e01b031981166322ba176160e21b14156126d75761273e858561318d565b92505050610ecb565b6001600160e01b031982166339d690a360e11b1415612783576001600160e01b031981166339d690a360e11b14156126d75761273e858561318d565b6001600160e01b0319821663025ceed960e61b14156127bf576001600160e01b0319811663025ceed960e61b14156126d75761273e858561318d565b6001600160e01b031982166000908152606560205260409020546001600160a01b03168015612874576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb0906128169089908990600401614205565b60006040518083038186803b15801561282e57600080fd5b505afa158015612842573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261286a9190810190613c75565b9350505050610ecb565b6001600160e01b031983811690831614156128935761286a868661318d565b60405162461bcd60e51b81526020600482015260176024820152763737ba103337bab7321024a0b9b9b2ba26b0ba31b432b960491b6044820152606401610412565b6000610ec882846143c4565b60006128ee8484846131ea565b1561292c5760405162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b6044820152606401610412565b611b348361293a868561328a565b90613296565b61294861371c565b81806020019051810190610ecb9190613d2c565b61296461371c565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161297b57905050905083816000815181106129c657634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b03168152505061271081600081518110612a0e57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160601b0392909216910152825250919050565b6000612a47612a408585612dd8565b8590610ebc565b905060005b8251811015612aba57612aa6612a9f848381518110612a7b57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b031687612dd890919063ffffffff16565b8390610ebc565b915080612ab281614407565b915050612a4c565b509392505050565b6000806000612ad58888610161546132a2565b90925090508015612ba05784516000906001600160e01b0319166322ba176160e21b1415612b1c578560200151806020019051810190612b1591906139f5565b9050612b55565b85516001600160e01b03191663025ceed960e61b1415612b555760008660200151806020019051810190612b509190613a11565b509150505b612b9e60405180604001604052808881526020018481525088612b77846132c4565b887ff87e69cb514f255f3d32f9d90f25160a10d0cdefe6618a6406db334d4450595c612dea565b505b509695505050505050565b845184906001600160e01b03191663025ceed960e61b14801590612be1575085516001600160e01b0319166339d690a360e11b14155b15612beb57611ec4565b6000808760200151806020019051810190612c069190613a11565b915091506000612c168383613302565b905060005b8151811015612cec57600080612c5d878b868681518110612c4c57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516132a2565b90975087925090508015612cd757612cd760405180604001604052808f8152602001838152508a868681518110612ca457634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518b7fb3c5c697ec0b511b76d12f6293e6ee827b1e1df79ac7c64d0466d945904893d7612dea565b50508080612ce490614407565b915050612c1b565b505050509695505050505050565b8460005b8451811015612ba057600080612d498489898681518110612d2f57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b03166132a2565b90945084925090508015612dc357612dc360405180604001604052808c81526020018381525087898681518110612d9057634e487b7160e01b600052603260045260246000fd5b602002602001015160000151887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf955612dea565b50508080612dd090614407565b915050612cfe565b6000610ec861271061293a858561328a565b8451516001600160e01b0319166355575f5d60e11b1415612e23576020850151612e1e906001600160a01b03851690611c71565b613147565b8451516001600160e01b0319166322ba176160e21b1415612eef576000856000015160200151806020019051810190612e5c91906139f5565b6322ba176160e21b6000526097602090815260008051602061449a833981519152549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c391612eb79185918a918a91906004016140e0565b600060405180830381600087803b158015612ed157600080fd5b505af1158015612ee5573d6000803e3d6000fd5b5050505050613147565b8451516001600160e01b0319166339d690a360e11b141561300257600080866000015160200151806020019051810190612f299190613a11565b915091508660200151600114612f765760405162461bcd60e51b815260206004820152601260248201527132b9319b9918903b30b63ab29032b93937b960711b6044820152606401610412565b6339d690a360e11b60005260976020526000805160206144fd83398151915254604051637b84dc8360e11b81526001600160a01b039091169063f709b90690612fc99085908a908a9087906004016140e0565b600060405180830381600087803b158015612fe357600080fd5b505af1158015612ff7573d6000803e3d6000fd5b505050505050613147565b8451516001600160e01b03191663025ceed960e61b14156130c65760008086600001516020015180602001905181019061303c9190613a11565b63025ceed960e61b60009081526097602090815260008051602061453d83398151915254908b0151604051639c1c2ee960e01b81526001600160a01b0380871660048301528c811660248301528b8116604483015260648201869052608482019290925260c060a482015260c4810193909352939550919350911690639c1c2ee99060e401612fc9565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf1906131149088908890889060040161422a565b600060405180830381600087803b15801561312e57600080fd5b505af1158015613142573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e858585858560405161317e95949392919061425d565b60405180910390a15050505050565b6131956136ea565b602080840151805190820120838201518051920191909120808214156131bf578492505050610ecb565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b60008261322c5760405162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b6044820152606401610412565b811580613237575083155b1561324457506000613283565b6000838061326257634e487b7160e01b600052601260045260246000fd5b8584099050613271858461328a565b61327d826103e861328a565b10159150505b9392505050565b6000610ec882846143a5565b6000610ec88284614385565b6000806132b8856132b38686612dd8565b61343c565b91509150935093915050565b6001600160a01b038082166000908152610163602052604081205490911680156132ee5792915050565b5050610162546001600160a01b0316919050565b6040516301ffc9a760e01b81526060906001600160a01b038416906301ffc9a790613351907fe42093a63818e0c931c15fda9036d0d8995a638e7acfabc8355a4789766e8de9906004016140b8565b60206040518083038186803b15801561336957600080fd5b505afa15801561337d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133a19190613bb2565b1561342457604051635d9dd7eb60e11b81526004810183905283906001600160a01b0382169063bb3bafd69060240160006040518083038186803b1580156133e857600080fd5b505afa1580156133fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611fab9190810190613b02565b61342d83613464565b15610ecb57611fb383836134ec565b6000808284111561345b5761345184846128d5565b9150829050611ab1565b50600093915050565b6040516301ffc9a760e01b815260009081906001600160a01b038416906301ffc9a79061349c9063152a902d60e11b906004016140b8565b60206040518083038186803b1580156134b457600080fd5b505afa1580156134c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132839190613bb2565b60405163152a902d60e11b815260048101829052620f424060248201526060906001600160a01b03841690632a55205a90604401604080518083038186803b15801561353757600080fd5b505afa925050508015613567575060408051601f3d908101601f1916820190925261356491810190613af0565b60015b6135a457604080516000808252602082019092529061359c565b613589613736565b8152602001906001900390816135815790505b509050610ecb565b61273e8282606080826135b8579050610ecb565b6000620f42406135c98560646143a5565b6135d39190614385565b6135de9060646143a5565b905061271081106136315760405162461bcd60e51b815260206004820181905260248201527f526f79616c7469657320323938312067726561746572207468616e20313030256044820152606401610412565b60408051600180825281830190925290816020015b61364e613736565b815260200190600190039081613646579050509150848260008151811061368557634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160601b0316826000815181106136d457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101510152509392505050565b60408051808201909152600081526060602082015290565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b80356122138161444e565b600082601f830112613768578081fd5b8151602061377d61377883614323565b6142f3565b80838252828201915082860187848660061b890101111561379c578586fd5b855b858110156137fa57604080838b0312156137b6578788fd5b6137be6142a8565b83516137c98161444e565b8152838701516001600160601b03811681146137e357898afd5b81880152855293850193919091019060010161379e565b5090979650505050505050565b803561221381614463565b600082601f830112613822578081fd5b813561383061377882614346565b818152846020838601011115613844578283fd5b816020850160208301379081016020019190915292915050565b60006040828403121561386f578081fd5b6138776142a8565b905081356001600160401b038082111561389057600080fd5b90830190604082860312156138a457600080fd5b6138ac6142a8565b82356138b781614463565b81526020830135828111156138cb57600080fd5b6138d787828601613812565b6020830152508084525050506020820135602082015292915050565b60006101208284031215613905578081fd5b61390d6142d0565b90506139188261374d565b815260208201356001600160401b038082111561393457600080fd5b6139408583860161385e565b60208401526139516040850161374d565b6040840152606084013591508082111561396a57600080fd5b6139768583860161385e565b60608401526080840135608084015260a084013560a084015260c084013560c08401526139a560e08501613807565b60e0840152610100915081840135818111156139c057600080fd5b6139cc86828701613812565b8385015250505092915050565b6000602082840312156139ea578081fd5b81356132838161444e565b600060208284031215613a06578081fd5b81516132838161444e565b60008060408385031215613a23578081fd5b8251613a2e8161444e565b6020939093015192949293505050565b60008060408385031215613a50578182fd5b8235613a5b8161444e565b91506020830135613a6b8161444e565b809150509250929050565b600080600080600060a08688031215613a8d578081fd5b8535613a988161444e565b945060208601356001600160401b03811115613ab2578182fd5b613abe88828901613812565b9450506040860135925060608601359150608086013560ff81168114613ae2578182fd5b809150509295509295909350565b60008060408385031215613a23578182fd5b60006020808385031215613b14578182fd5b82516001600160401b03811115613b29578283fd5b8301601f81018513613b39578283fd5b8051613b4761377882614323565b80828252848201915084840188868560061b8701011115613b66578687fd5b8694505b838510156122ed57604080828b031215613b82578788fd5b613b8a6142a8565b8251613b958161444e565b815282880151888201528452600195909501949286019201613b6a565b600060208284031215613bc3578081fd5b81518015158114613283578182fd5b600060208284031215613be3578081fd5b5035919050565b600060208284031215613bfb578081fd5b815161328381614463565b60008060408385031215613c18578182fd5b8235613a5b81614463565b60008060008060808587031215613c38578182fd5b8435613c438161444e565b93506020850135613c538161444e565b9250604085013591506060850135613c6a8161444e565b939692955090935050565b60006020808385031215613c87578182fd5b82516001600160401b0380821115613c9d578384fd5b9084019060408287031215613cb0578384fd5b613cb86142a8565b8251613cc381614463565b81528284015182811115613cd5578586fd5b80840193505086601f840112613ce9578485fd5b82519150613cf961377883614346565b8281528785848601011115613d0c578586fd5b613d1b838683018787016143db565b938101939093525090949350505050565b600060208284031215613d3d578081fd5b81516001600160401b0380821115613d53578283fd5b9083019060408286031215613d66578283fd5b613d6e6142a8565b825182811115613d7c578485fd5b613d8887828601613758565b825250602083015182811115613d9c578485fd5b613da887828601613758565b60208301525095945050505050565b600060208284031215613dc8578081fd5b81356001600160401b03811115613ddd578182fd5b611b34848285016138f3565b60008060008060808587031215613dfe578182fd5b84356001600160401b0380821115613e14578384fd5b613e20888389016138f3565b95506020870135915080821115613e35578384fd5b613e4188838901613812565b94506040870135915080821115613e56578384fd5b613e62888389016138f3565b93506060870135915080821115613e77578283fd5b50613e8487828801613812565b91505092959194509250565b60008151808452613ea88160208601602086016143db565b601f01601f19169290920160200192915050565b63ffffffff60e01b81511682526000602082015160406020850152611b346040850182613e90565b6000815160408452613ef96040850182613ebc565b602093840151949093019390935250919050565b60008251613f1f8184602087016143db565b9190910192915050565b60008351613f3b8184602088016143db565b60609390931b6001600160601b0319169190920190815260140192915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0384811682528316602082015260606040820181905260009061268690830184613e90565b602080825282518282018190526000919060409081850190868401855b8281101561400157815180516001600160a01b03168552860151868501529284019290850190600101613fd3565b5091979650505050505050565b8481526001600160a01b038416602082015260806040820181905260009061403890830185613ebc565b828103606084015261404a8185613ebc565b979650505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b828152604060208201526000611b346040830184613e90565b93845260ff9290921660208401526040830152606082015260800190565b6001600160e01b031991909116815260200190565b602081526000610ec86020830184613e90565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60408152600061411d6040830185613e90565b905060018060a01b03831660208301529392505050565b6040815260006141476040830185613e90565b90508260208301529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b6040815260006142186040830185613ebc565b82810360208401526126868185613ebc565b60608152600061423d6060830186613ee4565b6001600160a01b0394851660208401529290931660409091015292915050565b60a08152600061427060a0830188613ee4565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b604080519081016001600160401b03811182821017156142ca576142ca614438565b60405290565b60405161012081016001600160401b03811182821017156142ca576142ca614438565b604051601f8201601f191681016001600160401b038111828210171561431b5761431b614438565b604052919050565b60006001600160401b0382111561433c5761433c614438565b5060051b60200190565b60006001600160401b0382111561435f5761435f614438565b50601f01601f191660200190565b6000821982111561438057614380614422565b500190565b6000826143a057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156143bf576143bf614422565b500290565b6000828210156143d6576143d6614422565b500390565b60005b838110156143f65781810151838201526020016143de565b83811115610cdc5750506000910152565b600060001982141561441b5761441b614422565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f1457600080fd5b6001600160e01b031981168114610f1457600080fdfe1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c94532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc04d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e61747572652930a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d58be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400fa2646970667358221220fd2979c9383dceaaedfaf80931fcb05cdef0c6f583e9d74014783aae136cd2f164736f6c63430008040033";

export class ExchangeMetaV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExchangeMetaV2> {
    return super.deploy(overrides || {}) as Promise<ExchangeMetaV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExchangeMetaV2 {
    return super.attach(address) as ExchangeMetaV2;
  }
  connect(signer: Signer): ExchangeMetaV2__factory {
    return super.connect(signer) as ExchangeMetaV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeMetaV2Interface {
    return new utils.Interface(_abi) as ExchangeMetaV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeMetaV2 {
    return new Contract(address, _abi, signerOrProvider) as ExchangeMetaV2;
  }
}

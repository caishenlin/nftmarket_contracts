/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TransferExecutorTest,
  TransferExecutorTestInterface,
} from "../TransferExecutorTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
    ],
    name: "__TransferExecutorTest_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e06806100206000396000f3fe6080604052600436106100555760003560e01c80630dca75861461005a5780630f16ea071461006f57806330c642f11461008f578063715018a6146100af5780638da5cb5b146100c4578063f2fde38b146100ef575b600080fd5b61006d6100683660046109d9565b61010f565b005b34801561007b57600080fd5b5061006d61008a3660046109bc565b61012a565b34801561009b57600080fd5b5061006d6100aa366004610986565b610218565b3480156100bb57600080fd5b5061006d6102b5565b3480156100d057600080fd5b506100d961031c565b6040516100e69190610ab5565b60405180910390f35b3480156100fb57600080fd5b5061006d61010a36600461091a565b61032b565b61012561011b84610c4c565b8383600080610409565b505050565b600054610100900460ff1680610143575060005460ff16155b6101685760405162461bcd60e51b815260040161015f90610af3565b60405180910390fd5b600054610100900460ff1615801561018a576000805461ffff19166101011790555b6101926107ac565b6065602052600080516020610d7183398151915280546001600160a01b038481166001600160a01b031992831617909255600080516020610d5183398151915280549286169282168317905563025ceed960e61b600052600080516020610d91833981519152805490911690911790558015610125576000805461ff0019169055505050565b3361022161031c565b6001600160a01b0316146102475760405162461bcd60e51b815260040161015f90610b41565b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c3153593906102a9908490610ab5565b60405180910390a25050565b336102be61031c565b6001600160a01b0316146102e45760405162461bcd60e51b815260040161015f90610b41565b6033546040516000916001600160a01b031690600080516020610db1833981519152908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b3361033461031c565b6001600160a01b03161461035a5760405162461bcd60e51b815260040161015f90610b41565b6001600160a01b0381166103bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161015f565b6033546040516001600160a01b03808416921690600080516020610db183398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b8451516001600160e01b0319166355575f5d60e11b141561044257602085015161043d906001600160a01b03851690610849565b610766565b8451516001600160e01b0319166322ba176160e21b141561050e57600085600001516020015180602001905181019061047b919061093d565b6322ba176160e21b60005260656020908152600080516020610d71833981519152549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916104d69185918a918a9190600401610ac9565b600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050610766565b8451516001600160e01b0319166339d690a360e11b1415610621576000808660000151602001518060200190518101906105489190610959565b9150915086602001516001146105955760405162461bcd60e51b815260206004820152601260248201527132b9319b9918903b30b63ab29032b93937b960711b604482015260640161015f565b6339d690a360e11b6000526065602052600080516020610d5183398151915254604051637b84dc8360e11b81526001600160a01b039091169063f709b906906105e89085908a908a908790600401610ac9565b600060405180830381600087803b15801561060257600080fd5b505af1158015610616573d6000803e3d6000fd5b505050505050610766565b8451516001600160e01b03191663025ceed960e61b14156106e55760008086600001516020015180602001905181019061065b9190610959565b63025ceed960e61b600090815260656020908152600080516020610d9183398151915254908b0151604051639c1c2ee960e01b81526001600160a01b0380871660048301528c811660248301528b8116604483015260648201869052608482019290925260c060a482015260c4810193909352939550919350911690639c1c2ee99060e4016105e8565b8451516001600160e01b031916600090815260656020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf19061073390889088908890600401610b76565b600060405180830381600087803b15801561074d57600080fd5b505af1158015610761573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e858585858560405161079d959493929190610ba9565b60405180910390a15050505050565b600054610100900460ff16806107c5575060005460ff16155b6107e15760405162461bcd60e51b815260040161015f90610af3565b600054610100900460ff16158015610803576000805461ffff19166101011790555b603380546001600160a01b031916339081179091556040518190600090600080516020610db1833981519152908290a3508015610846576000805461ff00191690555b50565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610896576040519150601f19603f3d011682016040523d82523d6000602084013e61089b565b606091505b50509050806101255760405162461bcd60e51b815260206004820152602860248201527f4c69625472616e73666572204261736543757272656e6379207472616e7366656044820152671c8819985a5b195960c21b606482015260840161015f565b80356001600160e01b03198116811461091557600080fd5b919050565b60006020828403121561092b578081fd5b813561093681610d3b565b9392505050565b60006020828403121561094e578081fd5b815161093681610d3b565b6000806040838503121561096b578081fd5b825161097681610d3b565b6020939093015192949293505050565b60008060408385031215610998578182fd5b6109a1836108fd565b915060208301356109b181610d3b565b809150509250929050565b600080604083850312156109ce578182fd5b82356109a181610d3b565b6000806000606084860312156109ed578081fd5b83356001600160401b03811115610a02578182fd5b840160408187031215610a13578182fd5b92506020840135610a2381610d3b565b91506040840135610a3381610d3b565b809150509250925092565b600081516040845263ffffffff60e01b81511660408501526020808201519150604060608601528151806080870152835b81811015610a8b5783810183015187820160a001528201610a6f565b81811115610a9c578460a083890101525b5093810151908501525050601f01601f19160160a00190565b6001600160a01b0391909116815260200190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b606081526000610b896060830186610a3e565b6001600160a01b0394851660208401529290931660409091015292915050565b60a081526000610bbc60a0830188610a3e565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b604080519081016001600160401b0381118282101715610c1657610c16610d25565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610c4457610c44610d25565b604052919050565b600060408236031215610c5d578081fd5b610c65610bf4565b82356001600160401b0380821115610c7b578384fd5b818501915060408236031215610c8f578384fd5b610c97610bf4565b610ca0836108fd565b815260208084013583811115610cb4578687fd5b939093019236601f850112610cc7578586fd5b833583811115610cd957610cd9610d25565b610ceb601f8201601f19168301610c1c565b93508084523682828701011115610d00578687fd5b8082860183860137830181019590955280850191909152825250918101359082015290565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461084657600080fdfe56d09be51b6584e4bba75aba19b0e5d87280164030a68decabd019180bea2e03a3a54a403e35239dc7eb7732aefb69511f04db6442fdec4991c5536d935f18a0b4f17b66c3cfc5778c328b9d5047d8291f97b59b22f4919f5f986ad43451df9e8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212209d660e33136af999c625ba672c55f44e4c322cd3f07f657fa807b74b52d2b62464736f6c63430008040033";

export class TransferExecutorTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransferExecutorTest> {
    return super.deploy(overrides || {}) as Promise<TransferExecutorTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TransferExecutorTest {
    return super.attach(address) as TransferExecutorTest;
  }
  connect(signer: Signer): TransferExecutorTest__factory {
    return super.connect(signer) as TransferExecutorTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferExecutorTestInterface {
    return new utils.Interface(_abi) as TransferExecutorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferExecutorTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferExecutorTest;
  }
}

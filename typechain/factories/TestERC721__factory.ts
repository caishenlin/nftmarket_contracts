/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC721, TestERC721Interface } from "../TestERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611343806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf57806306fdde03146100e7578063081812fc146100fc578063095ea7b31461012757806323b872dd1461013c57806340c10f191461014f57806342842e0e146101625780636352211e1461017557806370a082311461018857806395d89b41146101a9578063a22cb465146101b1578063b88d4fde146101c4578063c87b56dd146101d7578063e985e9c5146101ea575b600080fd5b6100d26100cd36600461101b565b6101fd565b60405190151581526020015b60405180910390f35b6100ef61024f565b6040516100de9190611103565b61010f61010a366004611053565b6102e1565b6040516001600160a01b0390911681526020016100de565b61013a610135366004610ff2565b61036e565b005b61013a61014a366004610ea9565b61047f565b61013a61015d366004610ff2565b6104b0565b61013a610170366004610ea9565b6104be565b61010f610183366004611053565b6104d9565b61019b610196366004610e5d565b610550565b6040519081526020016100de565b6100ef6105d7565b61013a6101bf366004610fb8565b6105e6565b61013a6101d2366004610ee4565b6106a7565b6100ef6101e5366004611053565b6106df565b6100d26101f8366004610e77565b6107b7565b60006001600160e01b031982166380ac58cd60e01b148061022e57506001600160e01b03198216635b5e139f60e01b145b8061024957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461025e90611228565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90611228565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b60006102ec826107e5565b6103525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b6000610379826104d9565b9050806001600160a01b0316836001600160a01b031614156103e75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610349565b336001600160a01b0382161480610403575061040381336107b7565b6104705760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610349565b61047a8383610802565b505050565b6104893382610870565b6104a55760405162461bcd60e51b815260040161034990611168565b61047a83838361093a565b6104ba8282610ac8565b5050565b61047a838383604051806020016040528060008152506106a7565b6000818152606760205260408120546001600160a01b0316806102495760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610349565b60006001600160a01b0382166105bb5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610349565b506001600160a01b031660009081526068602052604090205490565b60606066805461025e90611228565b6001600160a01b03821633141561063b5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610349565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106b13383610870565b6106cd5760405162461bcd60e51b815260040161034990611168565b6106d984848484610be8565b50505050565b60606106ea826107e5565b61074e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610349565b600061076560408051602081019091526000815290565b9050600081511161078557604051806020016040528060008152506107b0565b8061078f84610c1b565b6040516020016107a0929190611097565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610837826104d9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061087b826107e5565b6108dc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610349565b60006108e7836104d9565b9050806001600160a01b0316846001600160a01b031614806109225750836001600160a01b0316610917846102e1565b6001600160a01b0316145b80610932575061093281856107b7565b949350505050565b826001600160a01b031661094d826104d9565b6001600160a01b0316146109b55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610349565b6001600160a01b038216610a175760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610349565b610a22600082610802565b6001600160a01b0383166000908152606860205260408120805460019290610a4b9084906111e5565b90915550506001600160a01b0382166000908152606860205260408120805460019290610a799084906111b9565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206112ee83398151915291a4505050565b6001600160a01b038216610b1e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610349565b610b27816107e5565b15610b735760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610349565b6001600160a01b0382166000908152606860205260408120805460019290610b9c9084906111b9565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206112ee833981519152908290a45050565b610bf384848461093a565b610bff84848484610d34565b6106d95760405162461bcd60e51b815260040161034990611116565b606081610c3f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c695780610c5381611263565b9150610c629050600a836111d1565b9150610c43565b6000816001600160401b03811115610c9157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610cbb576020820181803683370190505b5090505b841561093257610cd06001836111e5565b9150610cdd600a8661127e565b610ce89060306111b9565b60f81b818381518110610d0b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610d2d600a866111d1565b9450610cbf565b60006001600160a01b0384163b15610e3657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d789033908990889088906004016110c6565b602060405180830381600087803b158015610d9257600080fd5b505af1925050508015610dc2575060408051601f3d908101601f19168201909252610dbf91810190611037565b60015b610e1c573d808015610df0576040519150601f19603f3d011682016040523d82523d6000602084013e610df5565b606091505b508051610e145760405162461bcd60e51b815260040161034990611116565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610932565b506001949350505050565b80356001600160a01b0381168114610e5857600080fd5b919050565b600060208284031215610e6e578081fd5b6107b082610e41565b60008060408385031215610e89578081fd5b610e9283610e41565b9150610ea060208401610e41565b90509250929050565b600080600060608486031215610ebd578081fd5b610ec684610e41565b9250610ed460208501610e41565b9150604084013590509250925092565b60008060008060808587031215610ef9578081fd5b610f0285610e41565b9350610f1060208601610e41565b92506040850135915060608501356001600160401b0380821115610f32578283fd5b818701915087601f830112610f45578283fd5b813581811115610f5757610f576112be565b604051601f8201601f19908116603f01168101908382118183101715610f7f57610f7f6112be565b816040528281528a6020848701011115610f97578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610fca578182fd5b610fd383610e41565b915060208301358015158114610fe7578182fd5b809150509250929050565b60008060408385031215611004578182fd5b61100d83610e41565b946020939093013593505050565b60006020828403121561102c578081fd5b81356107b0816112d4565b600060208284031215611048578081fd5b81516107b0816112d4565b600060208284031215611064578081fd5b5035919050565b600081518084526110838160208601602086016111fc565b601f01601f19169290920160200192915050565b600083516110a98184602088016111fc565b8351908301906110bd8183602088016111fc565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906110f99083018461106b565b9695505050505050565b6020815260006107b0602083018461106b565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156111cc576111cc611292565b500190565b6000826111e0576111e06112a8565b500490565b6000828210156111f7576111f7611292565b500390565b60005b838110156112175781810151838201526020016111ff565b838111156106d95750506000910152565b600181811c9082168061123c57607f821691505b6020821081141561125d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561127757611277611292565b5060010190565b60008261128d5761128d6112a8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146112ea57600080fd5b5056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203695c604a54552d965147bff6a6bce4fa142c94697c56ab7bfac673774fe4f3064736f6c63430008040033";

export class TestERC721__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC721> {
    return super.deploy(overrides || {}) as Promise<TestERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestERC721 {
    return super.attach(address) as TestERC721;
  }
  connect(signer: Signer): TestERC721__factory {
    return super.connect(signer) as TestERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new utils.Interface(_abi) as TestERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721 {
    return new Contract(address, _abi, signerOrProvider) as TestERC721;
  }
}

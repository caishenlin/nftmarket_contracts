/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20TransferProxy,
  ERC20TransferProxyInterface,
} from "../ERC20TransferProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__ERC20TransferProxy_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__OperatorRole_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "erc20safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80632ff26a0a1461007d578063715018a614610087578063759781271461008f578063776062c3146100975780638da5cb5b146100aa5780639870d7fe146100ce578063ac8a584a146100e1578063f2fde38b146100f4575b600080fd5b610085610107565b005b61008561018c565b6100856101f3565b6100856100a5366004610674565b610252565b6100b261039b565b6040516001600160a01b03909116815260200160405180910390f35b6100856100dc366004610631565b6103aa565b6100856100ef366004610631565b6103fd565b610085610102366004610631565b61044d565b600054610100900460ff1680610120575060005460ff16155b6101455760405162461bcd60e51b815260040161013c906106c4565b60405180910390fd5b600054610100900460ff16158015610167576000805461ffff19166101011790555b61016f61052b565b610177610595565b8015610189576000805461ff00191690555b50565b3361019561039b565b6001600160a01b0316146101bb5760405162461bcd60e51b815260040161013c90610712565b6033546040516000916001600160a01b03169060008051602061075d833981519152908390a3603380546001600160a01b0319169055565b600054610100900460ff168061020c575060005460ff16155b6102285760405162461bcd60e51b815260040161013c906106c4565b600054610100900460ff1615801561024a576000805461ffff19166101011790555b610177610107565b3360009081526065602052604090205460ff166102c25760405162461bcd60e51b815260206004820152602860248201527f4f70657261746f72526f6c653a2063616c6c6572206973206e6f74207468652060448201526737b832b930ba37b960c11b606482015260840161013c565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401602060405180830381600087803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610654565b6103955760405162461bcd60e51b815260206004820152601a6024820152796661696c757265207768696c65207472616e7366657272696e6760301b604482015260640161013c565b50505050565b6033546001600160a01b031690565b336103b361039b565b6001600160a01b0316146103d95760405162461bcd60e51b815260040161013c90610712565b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b3361040661039b565b6001600160a01b03161461042c5760405162461bcd60e51b815260040161013c90610712565b6001600160a01b03166000908152606560205260409020805460ff19169055565b3361045661039b565b6001600160a01b03161461047c5760405162461bcd60e51b815260040161013c90610712565b6001600160a01b0381166104e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013c565b6033546040516001600160a01b0380841692169060008051602061075d83398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1680610544575060005460ff16155b6105605760405162461bcd60e51b815260040161013c906106c4565b600054610100900460ff16158015610177576000805461ffff19166101011790558015610189576000805461ff001916905550565b600054610100900460ff16806105ae575060005460ff16155b6105ca5760405162461bcd60e51b815260040161013c906106c4565b600054610100900460ff161580156105ec576000805461ffff19166101011790555b603380546001600160a01b03191633908117909155604051819060009060008051602061075d833981519152908290a3508015610189576000805461ff001916905550565b600060208284031215610642578081fd5b813561064d81610747565b9392505050565b600060208284031215610665578081fd5b8151801515811461064d578182fd5b60008060008060808587031215610689578283fd5b843561069481610747565b935060208501356106a481610747565b925060408501356106b481610747565b9396929550929360600135925050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461018957600080fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220eafdb090a63c8593b17ccfe3c015f53627e783a2835ac9c863e7097bae9ba1fe64736f6c63430008040033";

export class ERC20TransferProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20TransferProxy> {
    return super.deploy(overrides || {}) as Promise<ERC20TransferProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20TransferProxy {
    return super.attach(address) as ERC20TransferProxy;
  }
  connect(signer: Signer): ERC20TransferProxy__factory {
    return super.connect(signer) as ERC20TransferProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TransferProxyInterface {
    return new utils.Interface(_abi) as ERC20TransferProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TransferProxy {
    return new Contract(address, _abi, signerOrProvider) as ERC20TransferProxy;
  }
}

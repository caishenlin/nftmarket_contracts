/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibExchangeAuction,
  LibExchangeAuctionInterface,
} from "../LibExchangeAuction";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "firstBidTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservePrice",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "enum LibExchangeAuction.AuctionTypes",
            name: "auctionType",
            type: "LibExchangeAuction.AuctionTypes",
          },
          {
            internalType: "uint256",
            name: "startingAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "extensionPeriod",
            type: "uint256",
          },
          {
            internalType: "address[3]",
            name: "auctionSpecAddr",
            type: "address[3]",
          },
          {
            internalType: "uint8",
            name: "erc1155TokenAmount",
            type: "uint8",
          },
        ],
        internalType: "struct LibExchangeAuction.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6103a461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806343d218031461003a575b600080fd5b61004d6100483660046101dd565b61005f565b60405190815260200160405180910390f35b6000808260e001511161007157600080fd5b602082015160e08301516100859042610306565b106100935750610120015190565b60006100e86100dc6100c685602001516100c087610120015188610100015161010a90919063ffffffff16565b9061011d565b60e08601516100d690429061010a565b90610129565b6101008501519061010a565b90508261012001518110156100ff57506101208201515b92915050565b919050565b60006101168284610306565b9392505050565b600061011682846102c7565b600061011682846102e7565b803561010581610349565b600082601f830112610150578081fd5b6040516060810181811067ffffffffffffffff8211171561017357610173610333565b604052808360608101861015610187578384fd5b835b60038110156101b257813561019d81610349565b83526020928301929190910190600101610189565b509195945050505050565b80356004811061010557600080fd5b803560ff8116811461010557600080fd5b60006101e082840312156101ef578081fd5b6101f761029d565b8235815260208301356020820152604083013560408201526060830135606082015261022560808401610135565b608082015260a083013560a082015261024060c084016101bd565b60c082015260e0838101359082015261010080840135908201526101208084013590820152610140808401359082015261016061027f85828601610140565b908201526102906101c084016101cc565b6101808201529392505050565b6040516101a0810167ffffffffffffffff811182821017156102c1576102c1610333565b60405290565b6000826102e257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156103015761030161031d565b500290565b6000828210156103185761031861031d565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461036b57600080fd5b5056fea26469706673582212206b038d4ee2b243ead61fce3096b9ee75202363c7e4383b3d20f7dcbeda24242164736f6c63430008040033";

export class LibExchangeAuction__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibExchangeAuction> {
    return super.deploy(overrides || {}) as Promise<LibExchangeAuction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibExchangeAuction {
    return super.attach(address) as LibExchangeAuction;
  }
  connect(signer: Signer): LibExchangeAuction__factory {
    return super.connect(signer) as LibExchangeAuction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibExchangeAuctionInterface {
    return new utils.Interface(_abi) as LibExchangeAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibExchangeAuction {
    return new Contract(address, _abi, signerOrProvider) as LibExchangeAuction;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ExchangeV2, ExchangeV2Interface } from "../ExchangeV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "__ExchangeV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct GhostMarketRoyalties.Royalty[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613cd7806100206000396000f3fe6080604052600436106100ce5760003560e01c806302097ab1146100d35780631cdfe3d81461012057806320158c441461014257806330c642f11461017e5780633408e4701461019e5780633abf6fd4146101b1578063715018a6146101d257806376f64a1d146101e7578063787dce3d146102075780638da5cb5b14610227578063b0e21e8a1461023c578063b39deb4614610253578063bb3bafd614610273578063e2864fe3146102a1578063e66db25e146102c1578063e99a3f80146102e1578063f2fde38b146102f4575b600080fd5b3480156100df57600080fd5b5061010a6100ee3660046132c8565b610163602052600090815260409020546001600160a01b031681565b6040516101179190613782565b60405180910390f35b34801561012c57600080fd5b5061014061013b3660046132c8565b610314565b005b34801561014e57600080fd5b5061017061015d366004613447565b61012f6020526000908152604090205481565b604051908152602001610117565b34801561018a57600080fd5b5061014061019936600461347b565b61036f565b3480156101aa57600080fd5b5046610170565b3480156101bd57600080fd5b506101625461010a906001600160a01b031681565b3480156101de57600080fd5b5061014061040c565b3480156101f357600080fd5b50610140610202366004613498565b610473565b34801561021357600080fd5b50610140610222366004613447565b610575565b34801561023357600080fd5b5061010a6105aa565b34801561024857600080fd5b506101706101615481565b34801561025f57600080fd5b5061014061026e36600461347b565b6105b9565b34801561027f57600080fd5b5061029461028e366004613447565b50606090565b6040516101179190613796565b3480156102ad57600080fd5b506101406102bc36600461362c565b61064a565b3480156102cd57600080fd5b506101406102dc36600461332d565b61075b565b6101406102ef36600461365e565b6107b9565b34801561030057600080fd5b5061014061030f3660046132c8565b6108ff565b3361031d6105aa565b6001600160a01b03161461034c5760405162461bcd60e51b8152600401610343906138db565b60405180910390fd5b61016280546001600160a01b0319166001600160a01b0392909216919091179055565b336103786105aa565b6001600160a01b03161461039e5760405162461bcd60e51b8152600401610343906138db565b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c315359390610400908490613782565b60405180910390a25050565b336104156105aa565b6001600160a01b03161461043b5760405162461bcd60e51b8152600401610343906138db565b6033546040516000916001600160a01b031690600080516020613c42833981519152908390a3603380546001600160a01b0319169055565b600054610100900460ff168061048c575060005460ff16155b6104a85760405162461bcd60e51b81526004016103439061388d565b600054610100900460ff161580156104ca576000805461ffff19166101011790555b6104d26109dd565b6104da610a49565b6097602052600080516020613c0283398151915280546001600160a01b038681166001600160a01b031992831617909255600080516020613c2283398151915280549288169282168317905563025ceed960e61b600052600080516020613c62833981519152805490911690911790556105548383610ae5565b61055c610b75565b801561056e576000805461ff00191690555b5050505050565b3361057e6105aa565b6001600160a01b0316146105a45760405162461bcd60e51b8152600401610343906138db565b61016155565b6033546001600160a01b031690565b336105c26105aa565b6001600160a01b0316146105e85760405162461bcd60e51b8152600401610343906138db565b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f90610400908490613782565b61065333610c12565b80516001600160a01b0316336001600160a01b0316146106a35760405162461bcd60e51b815260206004820152600b60248201526a3737ba10309036b0b5b2b960a91b6044820152606401610343565b60808101516106eb5760405162461bcd60e51b81526020600482015260146024820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b6044820152606401610343565b60006106f682610c55565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e9361074f93869392916137ee565b60405180910390a15050565b336107646105aa565b6001600160a01b03161461078a5760405162461bcd60e51b8152600401610343906138db565b6001600160a01b0391821660009081526101636020526040902080546001600160a01b03191691909216179055565b6107c233610c12565b6107cb34610cc5565b6107d58484610d0a565b6107df8282610d0a565b60408401516001600160a01b0316156108675783604001516001600160a01b031682600001516001600160a01b0316146108675760405162461bcd60e51b815260206004820152602360248201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696044820152621b195960ea1b6064820152608401610343565b60408201516001600160a01b0316156108ef5783600001516001600160a01b031682604001516001600160a01b0316146108ef5760405162461bcd60e51b8152602060048201526024808201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616044820152631a5b195960e21b6064820152608401610343565b6108f98483610d21565b50505050565b336109086105aa565b6001600160a01b03161461092e5760405162461bcd60e51b8152600401610343906138db565b6001600160a01b0381166109935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610343565b6033546040516001600160a01b03808416921690600080516020613c4283398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16806109f6575060005460ff16155b610a125760405162461bcd60e51b81526004016103439061388d565b600054610100900460ff16158015610a34576000805461ffff19166101011790555b8015610a46576000805461ff00191690555b50565b600054610100900460ff1680610a62575060005460ff16155b610a7e5760405162461bcd60e51b81526004016103439061388d565b600054610100900460ff16158015610aa0576000805461ffff19166101011790555b603380546001600160a01b031916339081179091556040518190600090600080516020613c42833981519152908290a3508015610a46576000805461ff001916905550565b600054610100900460ff1680610afe575060005460ff16155b610b1a5760405162461bcd60e51b81526004016103439061388d565b600054610100900460ff16158015610b3c576000805461ffff19166101011790555b61016183905561016280546001600160a01b0319166001600160a01b0384161790558015610b70576000805461ff00191690555b505050565b600054610100900460ff1680610b8e575060005460ff16155b610baa5760405162461bcd60e51b81526004016103439061388d565b600054610100900460ff16158015610bcc576000805461ffff19166101011790555b610a346040518060400160405280600b81526020016a11da1bdcdd13585c9ad95d60aa1b815250604051806040016040528060018152602001601960f91b815250610f56565b610a4681604051602401610c269190613782565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610fe0565b805160208201515160009190610c6a90611001565b606084015151610c7990611001565b608080860151604080516001600160a01b039096166020870152850193909352606084019190915282015260a0015b604051602081830303815290604052805190602001209050919050565b610a4681604051602401610cdb91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610fe0565b610d138261105e565b610d1d828261111c565b5050565b600080610d2e84846112ca565b915091506000610d3d85610c55565b90506000610d4a85610c55565b600083815261012f602052604080822054838352908220549293509190610d7389898585611363565b90506000816020015111610dbb5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b6044820152606401610343565b600080610dcb8989858e8e6113e7565b8a5191935091506001600160e01b0319166355575f5d60e11b1415610e2b5781341015610e0a5760405162461bcd60e51b81526004016103439061393c565b81341115610e2657610e26610e1f8334613b2c565b339061151c565b610e7a565b87516001600160e01b0319166355575f5d60e11b1415610e7a5780341015610e655760405162461bcd60e51b81526004016103439061393c565b80341115610e7a57610e7a610e1f8234613b2c565b8a5133906001600160a01b03168114610ead576020840151610e9c9087613ad5565b600089815261012f60205260409020555b8a516001600160a01b03828116911614610ede578351610ecd9086613ad5565b600088815261012f60205260409020555b8b518b516020868101518751604080518e81529384018d90526001600160a01b0395861684820152949093166060830152608082015260a081019190915290517f0c0792d64a63025aad5946328f2bee95ed6f94d57160e5449513ecd215a074a69181900360c00190a1505050505050505050505050565b600054610100900460ff1680610f6f575060005460ff16155b610f8b5760405162461bcd60e51b81526004016103439061388d565b600054610100900460ff16158015610fad576000805461ffff19166101011790555b825160208085019190912083519184019190912060c99190915560ca558015610b70576000805461ff0019169055505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8051602080830151805190820120604051600093610ca8937f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c939192019283526001600160e01b0319919091166020830152604082015260600190565b60a081015115806110725750428160a00151105b6110be5760405162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c65640000006044820152606401610343565b60c081015115806110d25750428160c00151115b610a465760405162461bcd60e51b815260206004820152601b60248201527a13dc99195c88195b99081d985b1a59185d1a5bdb8819985a5b1959602a1b6044820152606401610343565b81516001600160a01b0316336001600160a01b031614610d1d576000611141836115d0565b83519091506001600160a01b03163b1561124b578251630b135d3f60e11b906001600160a01b0316631626ba7e611177846116a8565b856040518363ffffffff1660e01b8152600401611195929190613835565b60206040518083038186803b1580156111ad57600080fd5b505afa1580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e5919061345f565b6001600160e01b03191614610b705760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163743a207369676e617475726520766572696669636174696f6e6044820152651032b93937b960d11b6064820152608401610343565b82516001600160a01b031661126983611263846116a8565b906117c6565b6001600160a01b031614610b705760405162461bcd60e51b815260206004820152602260248201527f557365723a207369676e617475726520766572696669636174696f6e2065727260448201526137b960f11b6064820152608401610343565b6112d2612fd9565b6112da612fd9565b6020840151516060840151516112f0919061187e565b80519092506001600160e01b03191661131b5760405162461bcd60e51b815260040161034390613910565b606084015151602084015151611331919061187e565b80519091506001600160e01b03191661135c5760405162461bcd60e51b815260040161034390613910565b9250929050565b61136b612ff1565b60008061137887866118be565b9150915060008061138988876118be565b91509150838111156113bc576113b184848a60200151602001518b6060015160200151611902565b9450505050506113df565b6113d88960200151602001518a6060015160200151848461197d565b9450505050505b949350505050565b60008060006113fe886000015188600001516119fa565b8651602088015190945092509050600061141786611acb565b9050600061142486611acb565b9050600183600281111561144857634e487b7160e01b600052602160045260246000fd5b141561149d578751875161146f919084848e8e600080516020613be2833981519152611b81565b945061149889896020015188600001518560000151600080516020613c82833981519152611bfd565b61150f565b60028360028111156114bf57634e487b7160e01b600052602160045260246000fd5b141561150f576114ea8860200151876000015183858d8f600080516020613c82833981519152611b81565b88518851835192965061150f928d929190600080516020613be2833981519152611bfd565b5050509550959350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611569576040519150601f19603f3d011682016040523d82523d6000602084013e61156e565b606091505b5050905080610b705760405162461bcd60e51b815260206004820152602860248201527f4c69625472616e73666572204261736543757272656e6379207472616e7366656044820152671c8819985a5b195960c21b6064820152608401610343565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d82600001516116058460200151611d7d565b84604001516116178660600151611d7d565b608087015160a088015160c089015160e08a01516101008b01518051602091820120604051610ca89b9a999897969594939201998a526001600160a01b0398891660208b015260408a0197909752949096166060880152608087019290925260a086015260c085015260e08401929092526001600160e01b0319919091166101008301526101208201526101400190565b604080518082018252600b81526a11da1bdcdd13585c9ad95d60aa1b6020918201528151808301835260018152601960f91b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8183018190527ff7645354abf2b8319c9979d69e838e27128975fec6da6f7d8206f207bba6d37b8285018190527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5606084018190524660808501523060a0808601919091528651808603909101815260c08501875280519086012061190160f01b60e086015260e285018190526101028086018990528751808703909101815261012290950190965283519390940192909220600094929392905b9695505050505050565b6000806000808451604114156117f05750505060208201516040830151606084015160001a611866565b84516040141561181e5750505060408201516020830151906001600160ff1b0381169060ff1c601b01611866565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610343565b61187286828585611dd3565b93505050505b92915050565b611886612fd9565b60006118928484611f6d565b80519091506001600160e01b0319166118b7576118af8385611f6d565b915050611878565b9050611878565b6000806118dc838560600151602001516121b390919063ffffffff16565b90506118f9846020015160200151856060015160200151836121c6565b91509250929050565b61190a612ff1565b60006119178585856121c6565b9050858111156119645760405162461bcd60e51b8152602060048201526018602482015277199a5b1b1319599d0e881d5b98589b19481d1bc8199a5b1b60421b6044820152606401610343565b5050604080518082019091529384525050602082015290565b611985612ff1565b60006119928387876121c6565b9050838111156119e05760405162461bcd60e51b8152602060048201526019602482015278199a5b1b149a59da1d0e881d5b98589b19481d1bc8199a5b1b603a1b6044820152606401610343565b604080518082019091529283526020830152509392505050565b60006001600160e01b031983166355575f5d60e11b1415611a1d57506001611878565b6001600160e01b031982166355575f5d60e11b1415611a3e57506002611878565b6001600160e01b031983166322ba176160e21b1415611a5f57506001611878565b6001600160e01b031982166322ba176160e21b1415611a8057506002611878565b6001600160e01b0319831663025ceed960e61b1415611aa157506001611878565b6001600160e01b0319821663025ceed960e61b1415611ac257506002611878565b50600092915050565b611ad361300b565b60e08201516001600160e01b031916632611a13360e11b1415611b1c57611afe826101000151612225565b805151909150611b17578151611b149082612241565b90505b919050565b60e08201516001600160e01b03199081161415611b3f578151611b149082612241565b60405162461bcd60e51b8152602060048201526017602482015276556e6b6e6f776e204f726465722064617461207479706560481b6044820152606401610343565b6000611b9588610161548860200151612316565b90506000611ba6828a8a88876123a7565b9050611bb68585838c8c88612490565b9050611bca85828b8a602001518c886125df565b9050611bde85828b89602001518c886125df565b9050611bf185828a896000015187611bfd565b50979650505050505050565b6000805b8351811015611d23576000611c53858381518110611c2f57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316886126bd90919063ffffffff16565b9050611c9c858381518110611c7857634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316846126cf90919063ffffffff16565b92508015611d1057611d1060405180604001604052808a81526020018381525087878581518110611cdd57634e487b7160e01b600052603260045260246000fd5b602002602001015160000151877fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e6126db565b5080611d1b81613b6f565b915050611c01565b508061271014611d755760405162461bcd60e51b815260206004820152601e60248201527f53756d207061796f75747320427073206e6f7420657175616c203130302500006044820152606401610343565b505050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b08611dad8360000151611001565b602080850151604051610ca8949392019283526020830191909152604082015260600190565b60006fa2a8918ca85bafe22016d0b997e4df60600160ff1b03821115611e465760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610343565b8360ff16601b1480611e5b57508360ff16601c145b611eb25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610343565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611f06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611f645760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610343565b95945050505050565b611f75612fd9565b825182516001600160e01b031982166355575f5d60e11b1415611fe0576001600160e01b031981166355575f5d60e11b1415611fb5578492505050611878565b5050604080518082018252600080825282516020818101909452908152918101919091529050611878565b6001600160e01b031982166322ba176160e21b1415612025576001600160e01b031981166322ba176160e21b1415611fb55761201c8585612a7e565b92505050611878565b6001600160e01b031982166339d690a360e11b1415612061576001600160e01b031981166339d690a360e11b1415611fb55761201c8585612a7e565b6001600160e01b0319821663025ceed960e61b141561209d576001600160e01b0319811663025ceed960e61b1415611fb55761201c8585612a7e565b6001600160e01b031982166000908152606560205260409020546001600160a01b03168015612152576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb0906120f4908990899060040161396d565b60006040518083038186803b15801561210c57600080fd5b505afa158015612120573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261214891908101906134ea565b9350505050611878565b6001600160e01b03198381169083161415612171576121488686612a7e565b60405162461bcd60e51b81526020600482015260176024820152763737ba103337bab7321024a0b9b9b2ba26b0ba31b432b960491b6044820152606401610343565b60006121bf8284613b2c565b9392505050565b60006121d3848484612adb565b156122115760405162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b6044820152606401610343565b6113df8361221f8685612b79565b90612b85565b61222d61300b565b8180602001905181019061187891906135a1565b61224961300b565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161226057905050905083816000815181106122ab57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050612710816000815181106122f357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160601b0392909216910152825250919050565b600061232c61232585856126bd565b85906126cf565b905060005b825181101561239f5761238b61238484838151811061236057634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316876126bd90919063ffffffff16565b83906126cf565b91508061239781613b6f565b915050612331565b509392505050565b60008060006123ba888861016154612b91565b909250905080156124855784516000906001600160e01b0319166322ba176160e21b14156124015785602001518060200190518101906123fa91906132e4565b905061243a565b85516001600160e01b03191663025ceed960e61b141561243a57600086602001518060200190518101906124359190613300565b509150505b6124836040518060400160405280888152602001848152508861245c84612bb3565b887ff87e69cb514f255f3d32f9d90f25160a10d0cdefe6618a6406db334d4450595c6126db565b505b509695505050505050565b845184906001600160e01b03191663025ceed960e61b148015906124c6575085516001600160e01b0319166339d690a360e11b14155b156124d0576117bc565b60008087602001518060200190518101906124eb9190613300565b9150915060006124fb8383612bf1565b905060005b81518110156125d157600080612542878b86868151811061253157634e487b7160e01b600052603260045260246000fd5b602002602001015160200151612b91565b909750879250905080156125bc576125bc60405180604001604052808f8152602001838152508a86868151811061258957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518b7fb3c5c697ec0b511b76d12f6293e6ee827b1e1df79ac7c64d0466d945904893d76126db565b505080806125c990613b6f565b915050612500565b505050509695505050505050565b8460005b84518110156124855760008061262e848989868151811061261457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316612b91565b909450849250905080156126a8576126a860405180604001604052808c8152602001838152508789868151811061267557634e487b7160e01b600052603260045260246000fd5b602002602001015160000151887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf9556126db565b505080806126b590613b6f565b9150506125e3565b60006121bf61271061221f8585612b79565b60006121bf8284613ad5565b8451516001600160e01b0319166355575f5d60e11b141561271457602085015161270f906001600160a01b0385169061151c565b612a38565b8451516001600160e01b0319166322ba176160e21b14156127e057600085600001516020015180602001905181019061274d91906132e4565b6322ba176160e21b60005260976020908152600080516020613c02833981519152549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916127a89185918a918a9190600401613863565b600060405180830381600087803b1580156127c257600080fd5b505af11580156127d6573d6000803e3d6000fd5b5050505050612a38565b8451516001600160e01b0319166339d690a360e11b14156128f35760008086600001516020015180602001905181019061281a9190613300565b9150915086602001516001146128675760405162461bcd60e51b815260206004820152601260248201527132b9319b9918903b30b63ab29032b93937b960711b6044820152606401610343565b6339d690a360e11b6000526097602052600080516020613c2283398151915254604051637b84dc8360e11b81526001600160a01b039091169063f709b906906128ba9085908a908a908790600401613863565b600060405180830381600087803b1580156128d457600080fd5b505af11580156128e8573d6000803e3d6000fd5b505050505050612a38565b8451516001600160e01b03191663025ceed960e61b14156129b75760008086600001516020015180602001905181019061292d9190613300565b63025ceed960e61b600090815260976020908152600080516020613c6283398151915254908b0151604051639c1c2ee960e01b81526001600160a01b0380871660048301528c811660248301528b8116604483015260648201869052608482019290925260c060a482015260c4810193909352939550919350911690639c1c2ee99060e4016128ba565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf190612a0590889088908890600401613992565b600060405180830381600087803b158015612a1f57600080fd5b505af1158015612a33573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051612a6f9594939291906139c5565b60405180910390a15050505050565b612a86612fd9565b60208084015180519082012083820151805192019190912080821415612ab0578492505050611878565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b600082612b1d5760405162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b6044820152606401610343565b811580612b28575083155b15612b35575060006121bf565b60008380612b5357634e487b7160e01b600052601260045260246000fd5b8584099050612b628584612b79565b612b6e826103e8612b79565b101595945050505050565b60006121bf8284613b0d565b60006121bf8284613aed565b600080612ba785612ba286866126bd565b612d2b565b91509150935093915050565b6001600160a01b03808216600090815261016360205260408120549091168015612bdd5792915050565b5050610162546001600160a01b0316919050565b6040516301ffc9a760e01b81526060906001600160a01b038416906301ffc9a790612c40907fe42093a63818e0c931c15fda9036d0d8995a638e7acfabc8355a4789766e8de99060040161384e565b60206040518083038186803b158015612c5857600080fd5b505afa158015612c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c909190613427565b15612d1357604051635d9dd7eb60e11b81526004810183905283906001600160a01b0382169063bb3bafd69060240160006040518083038186803b158015612cd757600080fd5b505afa158015612ceb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118af9190810190613377565b612d1c83612d53565b15611878576118b78383612ddb565b60008082841115612d4a57612d4084846121b3565b915082905061135c565b50600093915050565b6040516301ffc9a760e01b815260009081906001600160a01b038416906301ffc9a790612d8b9063152a902d60e11b9060040161384e565b60206040518083038186803b158015612da357600080fd5b505afa158015612db7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613427565b60405163152a902d60e11b815260048101829052620f424060248201526060906001600160a01b03841690632a55205a90604401604080518083038186803b158015612e2657600080fd5b505afa925050508015612e56575060408051601f3d908101601f19168201909252612e5391810190613365565b60015b612e93576040805160008082526020820190925290612e8b565b612e78613025565b815260200190600190039081612e705790505b509050611878565b61201c828260608082612ea7579050611878565b6000620f4240612eb8856064613b0d565b612ec29190613aed565b612ecd906064613b0d565b90506127108110612f205760405162461bcd60e51b815260206004820181905260248201527f526f79616c7469657320323938312067726561746572207468616e20313030256044820152606401610343565b60408051600180825281830190925290816020015b612f3d613025565b815260200190600190039081612f355790505091508482600081518110612f7457634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160601b031682600081518110612fc357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101510152509392505050565b60408051808201909152600081526060602082015290565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b8035611b1781613bb6565b600082601f830112613057578081fd5b8151602061306c61306783613a8b565b613a5b565b80838252828201915082860187848660061b890101111561308b578586fd5b855b858110156130e957604080838b0312156130a5578788fd5b6130ad613a10565b83516130b881613bb6565b8152838701516001600160601b03811681146130d257898afd5b81880152855293850193919091019060010161308d565b5090979650505050505050565b8035611b1781613bcb565b600082601f830112613111578081fd5b813561311f61306782613aae565b818152846020838601011115613133578283fd5b816020850160208301379081016020019190915292915050565b60006040828403121561315e578081fd5b613166613a10565b905081356001600160401b038082111561317f57600080fd5b908301906040828603121561319357600080fd5b61319b613a10565b82356131a681613bcb565b81526020830135828111156131ba57600080fd5b6131c687828601613101565b6020830152508084525050506020820135602082015292915050565b600061012082840312156131f4578081fd5b6131fc613a38565b90506132078261303c565b815260208201356001600160401b038082111561322357600080fd5b61322f8583860161314d565b60208401526132406040850161303c565b6040840152606084013591508082111561325957600080fd5b6132658583860161314d565b60608401526080840135608084015260a084013560a084015260c084013560c084015261329460e085016130f6565b60e0840152610100915081840135818111156132af57600080fd5b6132bb86828701613101565b8385015250505092915050565b6000602082840312156132d9578081fd5b81356121bf81613bb6565b6000602082840312156132f5578081fd5b81516121bf81613bb6565b60008060408385031215613312578081fd5b825161331d81613bb6565b6020939093015192949293505050565b6000806040838503121561333f578182fd5b823561334a81613bb6565b9150602083013561335a81613bb6565b809150509250929050565b60008060408385031215613312578182fd5b60006020808385031215613389578182fd5b82516001600160401b0381111561339e578283fd5b8301601f810185136133ae578283fd5b80516133bc61306782613a8b565b80828252848201915084840188868560061b87010111156133db578687fd5b8694505b83851015611bf157604080828b0312156133f7578788fd5b6133ff613a10565b825161340a81613bb6565b8152828801518882015284526001959095019492860192016133df565b600060208284031215613438578081fd5b815180151581146121bf578182fd5b600060208284031215613458578081fd5b5035919050565b600060208284031215613470578081fd5b81516121bf81613bcb565b6000806040838503121561348d578182fd5b823561334a81613bcb565b600080600080608085870312156134ad578182fd5b84356134b881613bb6565b935060208501356134c881613bb6565b92506040850135915060608501356134df81613bb6565b939692955090935050565b600060208083850312156134fc578182fd5b82516001600160401b0380821115613512578384fd5b9084019060408287031215613525578384fd5b61352d613a10565b825161353881613bcb565b8152828401518281111561354a578586fd5b80840193505086601f84011261355e578485fd5b8251915061356e61306783613aae565b8281528785848601011115613581578586fd5b61359083868301878701613b43565b938101939093525090949350505050565b6000602082840312156135b2578081fd5b81516001600160401b03808211156135c8578283fd5b90830190604082860312156135db578283fd5b6135e3613a10565b8251828111156135f1578485fd5b6135fd87828601613047565b825250602083015182811115613611578485fd5b61361d87828601613047565b60208301525095945050505050565b60006020828403121561363d578081fd5b81356001600160401b03811115613652578182fd5b6113df848285016131e2565b60008060008060808587031215613673578182fd5b84356001600160401b0380821115613689578384fd5b613695888389016131e2565b955060208701359150808211156136aa578384fd5b6136b688838901613101565b945060408701359150808211156136cb578384fd5b6136d7888389016131e2565b935060608701359150808211156136ec578283fd5b506136f987828801613101565b91505092959194509250565b6000815180845261371d816020860160208601613b43565b601f01601f19169290920160200192915050565b63ffffffff60e01b815116825260006020820151604060208501526113df6040850182613705565b600081516040845261376e6040850182613731565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b828110156137e157815180516001600160a01b031685528601518685015292840192908501906001016137b3565b5091979650505050505050565b8481526001600160a01b038416602082015260806040820181905260009061381890830185613731565b828103606084015261382a8185613731565b979650505050505050565b8281526040602082015260006113df6040830184613705565b6001600160e01b031991909116815260200190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b6020808252601790820152766e6f7420656e6f756768204261736543757272656e637960481b604082015260600190565b6040815260006139806040830185613731565b8281036020840152611f648185613731565b6060815260006139a56060830186613759565b6001600160a01b0394851660208401529290931660409091015292915050565b60a0815260006139d860a0830188613759565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b604080519081016001600160401b0381118282101715613a3257613a32613ba0565b60405290565b60405161012081016001600160401b0381118282101715613a3257613a32613ba0565b604051601f8201601f191681016001600160401b0381118282101715613a8357613a83613ba0565b604052919050565b60006001600160401b03821115613aa457613aa4613ba0565b5060051b60200190565b60006001600160401b03821115613ac757613ac7613ba0565b50601f01601f191660200190565b60008219821115613ae857613ae8613b8a565b500190565b600082613b0857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613b2757613b27613b8a565b500290565b600082821015613b3e57613b3e613b8a565b500390565b60005b83811015613b5e578181015183820152602001613b46565b838111156108f95750506000910152565b6000600019821415613b8357613b83613b8a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610a4657600080fd5b6001600160e01b031981168114610a4657600080fdfe1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c94532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc030a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d58be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044ba26469706673582212205b3a1baa7dda0a80dfd155a96095a92f2995843441ada59558f30098aa6ff35664736f6c63430008040033";

export class ExchangeV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExchangeV2> {
    return super.deploy(overrides || {}) as Promise<ExchangeV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExchangeV2 {
    return super.attach(address) as ExchangeV2;
  }
  connect(signer: Signer): ExchangeV2__factory {
    return super.connect(signer) as ExchangeV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeV2Interface {
    return new utils.Interface(_abi) as ExchangeV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeV2 {
    return new Contract(address, _abi, signerOrProvider) as ExchangeV2;
  }
}

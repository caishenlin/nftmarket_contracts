/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OperatorRoleTest,
  OperatorRoleTestInterface,
} from "../OperatorRoleTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__OperatorRoleTest_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__OperatorRole_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSomething",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610665806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806301ec3b6c1461007d5780632ff26a0a146100985780634f899c28146100a2578063715018a6146100aa5780638da5cb5b146100b25780639870d7fe146100d2578063ac8a584a146100e5578063f2fde38b146100f8575b600080fd5b61008561010b565b6040519081526020015b60405180910390f35b6100a0610186565b005b6100a0610202565b6100a0610261565b6100ba6102c8565b6040516001600160a01b03909116815260200161008f565b6100a06100e036600461055e565b6102d7565b6100a06100f336600461055e565b61032a565b6100a061010636600461055e565b61037a565b3360009081526065602052604081205460ff166101805760405162461bcd60e51b815260206004820152602860248201527f4f70657261746f72526f6c653a2063616c6c6572206973206e6f74207468652060448201526737b832b930ba37b960c11b60648201526084015b60405180910390fd5b50600a90565b600054610100900460ff168061019f575060005460ff16155b6101bb5760405162461bcd60e51b81526004016101779061058c565b600054610100900460ff161580156101dd576000805461ffff19166101011790555b6101e5610458565b6101ed6104c2565b80156101ff576000805461ff00191690555b50565b600054610100900460ff168061021b575060005460ff16155b6102375760405162461bcd60e51b81526004016101779061058c565b600054610100900460ff16158015610259576000805461ffff19166101011790555b6101ed610186565b3361026a6102c8565b6001600160a01b0316146102905760405162461bcd60e51b8152600401610177906105da565b6033546040516000916001600160a01b031690600080516020610610833981519152908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b336102e06102c8565b6001600160a01b0316146103065760405162461bcd60e51b8152600401610177906105da565b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b336103336102c8565b6001600160a01b0316146103595760405162461bcd60e51b8152600401610177906105da565b6001600160a01b03166000908152606560205260409020805460ff19169055565b336103836102c8565b6001600160a01b0316146103a95760405162461bcd60e51b8152600401610177906105da565b6001600160a01b03811661040e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610177565b6033546040516001600160a01b0380841692169060008051602061061083398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1680610471575060005460ff16155b61048d5760405162461bcd60e51b81526004016101779061058c565b600054610100900460ff161580156101ed576000805461ffff191661010117905580156101ff576000805461ff001916905550565b600054610100900460ff16806104db575060005460ff16155b6104f75760405162461bcd60e51b81526004016101779061058c565b600054610100900460ff16158015610519576000805461ffff19166101011790555b603380546001600160a01b031916339081179091556040518190600090600080516020610610833981519152908290a35080156101ff576000805461ff001916905550565b60006020828403121561056f578081fd5b81356001600160a01b0381168114610585578182fd5b9392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212207967318cee07bb9e47515f7ec39dfa68a9882a34db17e97b7e8bd1494627b4d464736f6c63430008040033";

export class OperatorRoleTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OperatorRoleTest> {
    return super.deploy(overrides || {}) as Promise<OperatorRoleTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OperatorRoleTest {
    return super.attach(address) as OperatorRoleTest;
  }
  connect(signer: Signer): OperatorRoleTest__factory {
    return super.connect(signer) as OperatorRoleTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperatorRoleTestInterface {
    return new utils.Interface(_abi) as OperatorRoleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperatorRoleTest {
    return new Contract(address, _abi, signerOrProvider) as OperatorRoleTest;
  }
}

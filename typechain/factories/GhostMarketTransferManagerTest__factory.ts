/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GhostMarketTransferManagerTest,
  GhostMarketTransferManagerTestInterface,
} from "../GhostMarketTransferManagerTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "__TransferManager_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "makeMatch",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "takeMatch",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "makeValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takeValue",
            type: "uint256",
          },
        ],
        internalType: "struct LibFill.FillResult",
        name: "fill",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "leftOrder",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "rightOrder",
        type: "tuple",
      },
    ],
    name: "checkDoTransfers",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "payouts",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "originFees",
            type: "tuple[]",
          },
        ],
        internalType: "struct LibOrderDataV1.DataV1",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct GhostMarketRoyalties.Royalty[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506128af806100206000396000f3fe6080604052600436106100b85760003560e01c806302097ab1146100bd5780631cdfe3d81461010957806330c642f11461012b5780633408e4701461014b5780633abf6fd4146101685780635a35257014610188578063715018a6146101a8578063787dce3d146101bd5780638da5cb5b146101dd5780639a3c40fb146101f2578063a5e633a11461021f578063b0e21e8a14610232578063bb3bafd614610248578063e66db25e14610276578063f2fde38b14610296575b600080fd5b3480156100c957600080fd5b506100f36100d8366004611f6f565b6067602052600090815260409020546001600160a01b031681565b604051610100919061243b565b60405180910390f35b34801561011557600080fd5b50610129610124366004611f6f565b6102b6565b005b34801561013757600080fd5b506101296101463660046120ee565b610310565b34801561015757600080fd5b50465b604051908152602001610100565b34801561017457600080fd5b506066546100f3906001600160a01b031681565b34801561019457600080fd5b506101296101a3366004612109565b6103ad565b3480156101b457600080fd5b506101296104af565b3480156101c957600080fd5b506101296101d836600461233a565b610516565b3480156101e957600080fd5b506100f361054a565b3480156101fe57600080fd5b5061021261020d366004612233565b610559565b60405161010091906124bc565b61012961022d36600461215b565b610582565b34801561023e57600080fd5b5061015a60655481565b34801561025457600080fd5b5061026961026336600461233a565b50606090565b604051610100919061244f565b34801561028257600080fd5b50610129610291366004611fd4565b610598565b3480156102a257600080fd5b506101296102b1366004611f6f565b6105f5565b336102bf61054a565b6001600160a01b0316146102ee5760405162461bcd60e51b81526004016102e590612547565b60405180910390fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b3361031961054a565b6001600160a01b03161461033f5760405162461bcd60e51b81526004016102e590612547565b6001600160e01b031982166000818152609660205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c3153593906103a190849061243b565b60405180910390a25050565b600054610100900460ff16806103c6575060005460ff16155b6103e25760405162461bcd60e51b81526004016102e5906124f9565b600054610100900460ff16158015610404576000805461ffff19166101011790555b61040c6106d3565b61041461073f565b609660205260008051602061283a83398151915280546001600160a01b038681166001600160a01b03199283161790925560008051602061285a83398151915280549288169282168317905563025ceed960e61b6000526000805160206127da8339815191528054909116909117905561048e83836107db565b610496610869565b80156104a8576000805461ff00191690555b5050505050565b336104b861054a565b6001600160a01b0316146104de5760405162461bcd60e51b81526004016102e590612547565b6033546040516000916001600160a01b0316906000805160206127fa833981519152908390a3603380546001600160a01b0319169055565b3361051f61054a565b6001600160a01b0316146105455760405162461bcd60e51b81526004016102e590612547565b606555565b6033546001600160a01b031690565b60608160405160200161056c91906125fa565b6040516020818303038152906040529050919050565b61058f8585858585610906565b50505050505050565b336105a161054a565b6001600160a01b0316146105c75760405162461bcd60e51b81526004016102e590612547565b6001600160a01b03918216600090815260676020526040902080546001600160a01b03191691909216179055565b336105fe61054a565b6001600160a01b0316146106245760405162461bcd60e51b81526004016102e590612547565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e5565b6033546040516001600160a01b038084169216906000805160206127fa83398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16806106ec575060005460ff16155b6107085760405162461bcd60e51b81526004016102e5906124f9565b600054610100900460ff1615801561072a576000805461ffff19166101011790555b801561073c576000805461ff00191690555b50565b600054610100900460ff1680610758575060005460ff16155b6107745760405162461bcd60e51b81526004016102e5906124f9565b600054610100900460ff16158015610796576000805461ffff19166101011790555b603380546001600160a01b0319163390811790915560405181906000906000805160206127fa833981519152908290a350801561073c576000805461ff001916905550565b600054610100900460ff16806107f4575060005460ff16155b6108105760405162461bcd60e51b81526004016102e5906124f9565b600054610100900460ff16158015610832576000805461ffff19166101011790555b6065839055606680546001600160a01b0319166001600160a01b0384161790558015610864576000805461ff00191690555b505050565b600054610100900460ff1680610882575060005460ff16155b61089e5760405162461bcd60e51b81526004016102e5906124f9565b600054610100900460ff161580156108c0576000805461ffff19166101011790555b61072a6040518060400160405280600b81526020016a11da1bdcdd13585c9ad95d60aa1b815250604051806040016040528060018152602001601960f91b815250610a3b565b600080600061091d88600001518860000151610ac5565b8651602088015190945092509050600061093686610b97565b9050600061094386610b97565b9050600183600281111561096757634e487b7160e01b600052602160045260246000fd5b14156109bc578751875161098e919084848e8e6000805160206127ba833981519152610c4d565b94506109b78989602001518860000151856000015160008051602061281a833981519152610cc8565b610a2e565b60028360028111156109de57634e487b7160e01b600052602160045260246000fd5b1415610a2e57610a098860200151876000015183858d8f60008051602061281a833981519152610c4d565b885188518351929650610a2e928d9291906000805160206127ba833981519152610cc8565b5050509550959350505050565b600054610100900460ff1680610a54575060005460ff16155b610a705760405162461bcd60e51b81526004016102e5906124f9565b600054610100900460ff16158015610a92576000805461ffff19166101011790555b825160208085019190912083519184019190912060c89190915560c9558015610864576000805461ff0019169055505050565b60006001600160e01b031983166355575f5d60e11b1415610ae857506001610b91565b6001600160e01b031982166355575f5d60e11b1415610b0957506002610b91565b6001600160e01b031983166322ba176160e21b1415610b2a57506001610b91565b6001600160e01b031982166322ba176160e21b1415610b4b57506002610b91565b6001600160e01b0319831663025ceed960e61b1415610b6c57506001610b91565b6001600160e01b0319821663025ceed960e61b1415610b8d57506002610b91565b5060005b92915050565b610b9f611bee565b60e08201516001600160e01b031916632611a13360e11b1415610be857610bca826101000151610e48565b805151909150610be3578151610be09082610e64565b90505b919050565b60e08201516001600160e01b03199081161415610c0b578151610be09082610e64565b60405162461bcd60e51b8152602060048201526017602482015276556e6b6e6f776e204f726465722064617461207479706560481b60448201526064016102e5565b6000610c60886065548860200151610f39565b90506000610c71828a8a8887610fca565b9050610c818585838c8c886110b2565b9050610c9585828b8a602001518c88611202565b9050610ca985828b89602001518c88611202565b9050610cbc85828a896000015187610cc8565b50979650505050505050565b6000805b8351811015610dee576000610d1e858381518110610cfa57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316886112e090919063ffffffff16565b9050610d67858381518110610d4357634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316846112ff90919063ffffffff16565b92508015610ddb57610ddb60405180604001604052808a81526020018381525087878581518110610da857634e487b7160e01b600052603260045260246000fd5b602002602001015160000151877fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e61130b565b5080610de681612748565b915050610ccc565b508061271014610e405760405162461bcd60e51b815260206004820152601e60248201527f53756d207061796f75747320427073206e6f7420657175616c2031303025000060448201526064016102e5565b505050505050565b610e50611bee565b81806020019051810190610b9191906122be565b610e6c611bee565b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610e835790505090508381600081518110610ece57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b03168152505061271081600081518110610f1657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160601b0392909216910152825250919050565b6000610f4f610f4885856112e0565b85906112ff565b905060005b8251811015610fc257610fae610fa7848381518110610f8357634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316876112e090919063ffffffff16565b83906112ff565b915080610fba81612748565b915050610f54565b509392505050565b6000806000610fdc88886065546116ae565b909250905080156110a75784516000906001600160e01b0319166322ba176160e21b141561102357856020015180602001905181019061101c9190611f8b565b905061105c565b85516001600160e01b03191663025ceed960e61b141561105c57600086602001518060200190518101906110579190611fa7565b509150505b6110a56040518060400160405280888152602001848152508861107e846116d0565b887ff87e69cb514f255f3d32f9d90f25160a10d0cdefe6618a6406db334d4450595c61130b565b505b509695505050505050565b845184906001600160e01b03191663025ceed960e61b148015906110e8575085516001600160e01b0319166339d690a360e11b14155b156110f2576111f8565b600080876020015180602001905181019061110d9190611fa7565b91509150600061111d838361170c565b905060005b81518110156111f357600080611164878b86868151811061115357634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516116ae565b909750879250905080156111de576111de60405180604001604052808f8152602001838152508a8686815181106111ab57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518b7fb3c5c697ec0b511b76d12f6293e6ee827b1e1df79ac7c64d0466d945904893d761130b565b505080806111eb90612748565b915050611122565b505050505b9695505050505050565b8460005b84518110156110a757600080611251848989868151811061123757634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b03166116ae565b909450849250905080156112cb576112cb60405180604001604052808c8152602001838152508789868151811061129857634e487b7160e01b600052603260045260246000fd5b602002602001015160000151887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf95561130b565b505080806112d890612748565b915050611206565b60006112f86127106112f28585611855565b90611861565b9392505050565b60006112f882846126da565b8451516001600160e01b0319166355575f5d60e11b141561134457602085015161133f906001600160a01b0385169061186d565b611668565b8451516001600160e01b0319166322ba176160e21b141561141057600085600001516020015180602001905181019061137d9190611f8b565b6322ba176160e21b6000526096602090815260008051602061283a833981519152549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916113d89185918a918a91906004016124cf565b600060405180830381600087803b1580156113f257600080fd5b505af1158015611406573d6000803e3d6000fd5b5050505050611668565b8451516001600160e01b0319166339d690a360e11b14156115235760008086600001516020015180602001905181019061144a9190611fa7565b9150915086602001516001146114975760405162461bcd60e51b815260206004820152601260248201527132b9319b9918903b30b63ab29032b93937b960711b60448201526064016102e5565b6339d690a360e11b600052609660205260008051602061285a83398151915254604051637b84dc8360e11b81526001600160a01b039091169063f709b906906114ea9085908a908a9087906004016124cf565b600060405180830381600087803b15801561150457600080fd5b505af1158015611518573d6000803e3d6000fd5b505050505050611668565b8451516001600160e01b03191663025ceed960e61b14156115e75760008086600001516020015180602001905181019061155d9190611fa7565b63025ceed960e61b6000908152609660209081526000805160206127da83398151915254908b0151604051639c1c2ee960e01b81526001600160a01b0380871660048301528c811660248301528b8116604483015260648201869052608482019290925260c060a482015260c4810193909352939550919350911690639c1c2ee99060e4016114ea565b8451516001600160e01b031916600090815260966020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf1906116359088908890889060040161257c565b600060405180830381600087803b15801561164f57600080fd5b505af1158015611663573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e858585858560405161169f9594939291906125af565b60405180910390a15050505050565b6000806116c4856116bf86866112e0565b611921565b91509150935093915050565b6001600160a01b0380821660009081526067602052604081205490911680156116f95792915050565b50506066546001600160a01b0316919050565b6040516301ffc9a760e01b81526060906001600160a01b038416906301ffc9a79061175b907fe42093a63818e0c931c15fda9036d0d8995a638e7acfabc8355a4789766e8de9906004016124a7565b60206040518083038186803b15801561177357600080fd5b505afa158015611787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ab91906120ce565b1561183657604051635d9dd7eb60e11b81526004810183905283906001600160a01b0382169063bb3bafd69060240160006040518083038186803b1580156117f257600080fd5b505afa158015611806573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261182e919081019061201e565b915050610b91565b61183f8361194e565b15610b915761184e83836119d6565b9050610b91565b60006112f88284612712565b60006112f882846126f2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146118ba576040519150601f19603f3d011682016040523d82523d6000602084013e6118bf565b606091505b50509050806108645760405162461bcd60e51b815260206004820152602860248201527f4c69625472616e73666572204261736543757272656e6379207472616e7366656044820152671c8819985a5b195960c21b60648201526084016102e5565b60008082841115611940576119368484611aa1565b9150829050611947565b5060009050825b9250929050565b6040516301ffc9a760e01b815260009081906001600160a01b038416906301ffc9a7906119869063152a902d60e11b906004016124a7565b60206040518083038186803b15801561199e57600080fd5b505afa1580156119b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f891906120ce565b60405163152a902d60e11b815260048101829052620f424060248201526060906001600160a01b03841690632a55205a90604401604080518083038186803b158015611a2157600080fd5b505afa925050508015611a51575060408051601f3d908101601f19168201909252611a4e9181019061200c565b60015b611a8e576040805160008082526020820190925290611a86565b611a73611c08565b815260200190600190039081611a6b5790505b509050610b91565b611a988282611aad565b92505050610b91565b60006112f88284612731565b60608082611abc579050610b91565b6000620f4240611acd856064612712565b611ad791906126f2565b611ae2906064612712565b90506127108110611b355760405162461bcd60e51b815260206004820181905260248201527f526f79616c7469657320323938312067726561746572207468616e203130302560448201526064016102e5565b60408051600180825281830190925290816020015b611b52611c08565b815260200190600190039081611b4a5790505091508482600081518110611b8957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160601b031682600081518110611bd857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101510152509392505050565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b8035610be38161278f565b600082601f830112611c3a578081fd5b81356020611c4f611c4a836126b7565b612687565b80838252828201915082860187848660061b8901011115611c6e578586fd5b855b85811015611cc157604080838b031215611c88578788fd5b611c9061263c565b8335611c9b8161278f565b815283870135611caa816127a4565b818801528552938501939190910190600101611c70565b5090979650505050505050565b600082601f830112611cde578081fd5b81516020611cee611c4a836126b7565b80838252828201915082860187848660061b8901011115611d0d578586fd5b855b85811015611cc157604080838b031215611d27578788fd5b611d2f61263c565b8351611d3a8161278f565b815283870151611d49816127a4565b818801528552938501939190910190600101611d0f565b80356001600160e01b031981168114610be357600080fd5b600082601f830112611d88578081fd5b81356001600160401b03811115611da157611da1612779565b611db4601f8201601f1916602001612687565b818152846020838601011115611dc8578283fd5b816020850160208301379081016020019190915292915050565b600060408284031215611df3578081fd5b611dfb61263c565b9050611e0682611d60565b815260208201356001600160401b03811115611e2157600080fd5b611e2d84828501611d78565b60208301525092915050565b600060408284031215611e4a578081fd5b611e5261263c565b905081356001600160401b03811115611e6a57600080fd5b611e7684828501611de2565b8252506020820135602082015292915050565b60006101208284031215611e9b578081fd5b611ea3612664565b9050611eae82611c1f565b815260208201356001600160401b0380821115611eca57600080fd5b611ed685838601611e39565b6020840152611ee760408501611c1f565b60408401526060840135915080821115611f0057600080fd5b611f0c85838601611e39565b60608401526080840135608084015260a084013560a084015260c084013560c0840152611f3b60e08501611d60565b60e084015261010091508184013581811115611f5657600080fd5b611f6286828701611d78565b8385015250505092915050565b600060208284031215611f80578081fd5b81356112f88161278f565b600060208284031215611f9c578081fd5b81516112f88161278f565b60008060408385031215611fb9578081fd5b8251611fc48161278f565b6020939093015192949293505050565b60008060408385031215611fe6578182fd5b8235611ff18161278f565b915060208301356120018161278f565b809150509250929050565b60008060408385031215611fb9578182fd5b60006020808385031215612030578182fd5b82516001600160401b03811115612045578283fd5b8301601f81018513612055578283fd5b8051612063611c4a826126b7565b80828252848201915084840188868560061b8701011115612082578687fd5b8694505b83851015610cbc57604080828b03121561209e578788fd5b6120a661263c565b82516120b18161278f565b815282880151888201528452600195909501949286019201612086565b6000602082840312156120df578081fd5b815180151581146112f8578182fd5b60008060408385031215612100578182fd5b611ff183611d60565b6000806000806080858703121561211e578182fd5b84356121298161278f565b935060208501356121398161278f565b92506040850135915060608501356121508161278f565b939692955090935050565b600080600080600085870360c0811215612173578384fd5b86356001600160401b0380821115612189578586fd5b6121958a838b01611de2565b975060208901359150808211156121aa578586fd5b6121b68a838b01611de2565b96506040603f19840112156121c9578586fd5b6121d161263c565b60408a0135815260608a01356020820152955060808901359250808311156121f7578384fd5b6122038a848b01611e89565b945060a0890135925080831115612218578384fd5b505061222688828901611e89565b9150509295509295909350565b600060208284031215612244578081fd5b81356001600160401b038082111561225a578283fd5b908301906040828603121561226d578283fd5b61227561263c565b823582811115612283578485fd5b61228f87828601611c2a565b8252506020830135828111156122a3578485fd5b6122af87828601611c2a565b60208301525095945050505050565b6000602082840312156122cf578081fd5b81516001600160401b03808211156122e5578283fd5b90830190604082860312156122f8578283fd5b61230061263c565b82518281111561230e578485fd5b61231a87828601611cce565b82525060208301518281111561232e578485fd5b6122af87828601611cce565b60006020828403121561234b578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561239e57815180516001600160a01b031688528301516001600160601b03168388015260409096019590820190600101612365565b509495945050505050565b60008151808452815b818110156123ce576020818501810151868301820152016123b2565b818111156123df5782602083870101525b50601f01601f19169290920160200192915050565b600081516040845263ffffffff60e01b8151166040850152602081015190506040606085015261242760808501826123a9565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b8281101561249a57815180516001600160a01b0316855286015186850152928401929085019060010161246c565b5091979650505050505050565b6001600160e01b031991909116815260200190565b6020815260006112f860208301846123a9565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60608152600061258f60608301866123f4565b6001600160a01b0394851660208401529290931660409091015292915050565b60a0815260006125c260a08301886123f4565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b6020815260008251604060208401526126166060840182612352565b90506020840151601f198483030160408501526126338282612352565b95945050505050565b604080519081016001600160401b038111828210171561265e5761265e612779565b60405290565b60405161012081016001600160401b038111828210171561265e5761265e612779565b604051601f8201601f191681016001600160401b03811182821017156126af576126af612779565b604052919050565b60006001600160401b038211156126d0576126d0612779565b5060051b60200190565b600082198211156126ed576126ed612763565b500190565b60008261270d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561272c5761272c612763565b500290565b60008282101561274357612743612763565b500390565b600060001982141561275c5761275c612763565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461073c57600080fd5b6001600160601b038116811461073c57600080fdfe1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c957e68b9bc09537c4b0710d702a94075f590bf1a340bb10619c4bc9ff141413c58be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0b45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b32ee60289a3643a6cb0aeca36a1ab03b27923ea44c392530533c350a46f147028447a59b3b723f36d6429a0b90a5ab2cfb5c74ea72fafe5e54ac0162cc9a3f79a26469706673582212209907678121e037b4c2c19ff7c852e543110910bd370272d15d8fc6a73bb2225e64736f6c63430008040033";

export class GhostMarketTransferManagerTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GhostMarketTransferManagerTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<GhostMarketTransferManagerTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GhostMarketTransferManagerTest {
    return super.attach(address) as GhostMarketTransferManagerTest;
  }
  connect(signer: Signer): GhostMarketTransferManagerTest__factory {
    return super.connect(signer) as GhostMarketTransferManagerTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GhostMarketTransferManagerTestInterface {
    return new utils.Interface(_abi) as GhostMarketTransferManagerTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GhostMarketTransferManagerTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GhostMarketTransferManagerTest;
  }
}

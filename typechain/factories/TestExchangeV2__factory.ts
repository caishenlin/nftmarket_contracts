/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestExchangeV2,
  TestExchangeV2Interface,
} from "../TestExchangeV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "__ExchangeV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct GhostMarketRoyalties.Royalty[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
    ],
    name: "matchAndTransferExternal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613e5e806100206000396000f3fe6080604052600436106100d95760003560e01c806302097ab1146100de5780631cdfe3d81461012b57806320158c441461014d57806330c642f1146101895780633408e470146101a95780633abf6fd4146101bc578063715018a6146101dd57806376f64a1d146101f2578063787dce3d146102125780638da5cb5b1461023257806399a06b6a14610247578063b0e21e8a1461025a578063b39deb4614610271578063bb3bafd614610291578063e2864fe3146102bf578063e66db25e146102df578063e99a3f80146102ff578063f2fde38b14610312575b600080fd5b3480156100ea57600080fd5b506101156100f93660046133d4565b610163602052600090815260409020546001600160a01b031681565b60405161012291906138ee565b60405180910390f35b34801561013757600080fd5b5061014b6101463660046133d4565b610332565b005b34801561015957600080fd5b5061017b610168366004613553565b61012f6020526000908152604090205481565b604051908152602001610122565b34801561019557600080fd5b5061014b6101a4366004613587565b61038d565b3480156101b557600080fd5b504661017b565b3480156101c857600080fd5b5061016254610115906001600160a01b031681565b3480156101e957600080fd5b5061014b61042a565b3480156101fe57600080fd5b5061014b61020d3660046135a4565b610491565b34801561021e57600080fd5b5061014b61022d366004613553565b610593565b34801561023e57600080fd5b506101156105c8565b61014b610255366004613811565b6105d7565b34801561026657600080fd5b5061017b6101615481565b34801561027d57600080fd5b5061014b61028c366004613587565b6105e5565b34801561029d57600080fd5b506102b26102ac366004613553565b50606090565b6040516101229190613902565b3480156102cb57600080fd5b5061014b6102da366004613738565b610676565b3480156102eb57600080fd5b5061014b6102fa366004613439565b610787565b61014b61030d36600461376a565b6107e5565b34801561031e57600080fd5b5061014b61032d3660046133d4565b610972565b3361033b6105c8565b6001600160a01b03161461036a5760405162461bcd60e51b815260040161036190613a93565b60405180910390fd5b61016280546001600160a01b0319166001600160a01b0392909216919091179055565b336103966105c8565b6001600160a01b0316146103bc5760405162461bcd60e51b815260040161036190613a93565b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c31535939061041e9084906138ee565b60405180910390a25050565b336104336105c8565b6001600160a01b0316146104595760405162461bcd60e51b815260040161036190613a93565b6033546040516000916001600160a01b031690600080516020613dc9833981519152908390a3603380546001600160a01b0319169055565b600054610100900460ff16806104aa575060005460ff16155b6104c65760405162461bcd60e51b815260040161036190613a45565b600054610100900460ff161580156104e8576000805461ffff19166101011790555b6104f0610a50565b6104f8610abc565b6097602052600080516020613d8983398151915280546001600160a01b038681166001600160a01b031992831617909255600080516020613da983398151915280549288169282168317905563025ceed960e61b600052600080516020613de9833981519152805490911690911790556105728383610b58565b61057a610be8565b801561058c576000805461ff00191690555b5050505050565b3361059c6105c8565b6001600160a01b0316146105c25760405162461bcd60e51b815260040161036190613a93565b61016155565b6033546001600160a01b031690565b6105e18282610c85565b5050565b336105ee6105c8565b6001600160a01b0316146106145760405162461bcd60e51b815260040161036190613a93565b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f9061041e9084906138ee565b61067f33610f1a565b80516001600160a01b0316336001600160a01b0316146106cf5760405162461bcd60e51b815260206004820152600b60248201526a3737ba10309036b0b5b2b960a91b6044820152606401610361565b60808101516107175760405162461bcd60e51b81526020600482015260146024820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b6044820152606401610361565b600061072282610f5d565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e9361077b938693929161395a565b60405180910390a15050565b336107906105c8565b6001600160a01b0316146107b65760405162461bcd60e51b815260040161036190613a93565b6001600160a01b0391821660009081526101636020526040902080546001600160a01b03191691909216179055565b6108126040518060400160405280600b81526020016a36b9b39739b2b73232b91d60a91b81525033610fcd565b61083e6040518060400160405280600a81526020016936b9b3973b30b63ab29d60b11b81525034611012565b6108488484611057565b6108528282611057565b60408401516001600160a01b0316156108da5783604001516001600160a01b031682600001516001600160a01b0316146108da5760405162461bcd60e51b815260206004820152602360248201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696044820152621b195960ea1b6064820152608401610361565b60408201516001600160a01b0316156109625783600001516001600160a01b031682604001516001600160a01b0316146109625760405162461bcd60e51b8152602060048201526024808201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616044820152631a5b195960e21b6064820152608401610361565b61096c8483610c85565b50505050565b3361097b6105c8565b6001600160a01b0316146109a15760405162461bcd60e51b815260040161036190613a93565b6001600160a01b038116610a065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610361565b6033546040516001600160a01b03808416921690600080516020613dc983398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1680610a69575060005460ff16155b610a855760405162461bcd60e51b815260040161036190613a45565b600054610100900460ff16158015610aa7576000805461ffff19166101011790555b8015610ab9576000805461ff00191690555b50565b600054610100900460ff1680610ad5575060005460ff16155b610af15760405162461bcd60e51b815260040161036190613a45565b600054610100900460ff16158015610b13576000805461ffff19166101011790555b603380546001600160a01b031916339081179091556040518190600090600080516020613dc9833981519152908290a3508015610ab9576000805461ff001916905550565b600054610100900460ff1680610b71575060005460ff16155b610b8d5760405162461bcd60e51b815260040161036190613a45565b600054610100900460ff16158015610baf576000805461ffff19166101011790555b61016183905561016280546001600160a01b0319166001600160a01b0384161790558015610be3576000805461ff00191690555b505050565b600054610100900460ff1680610c01575060005460ff16155b610c1d5760405162461bcd60e51b815260040161036190613a45565b600054610100900460ff16158015610c3f576000805461ffff19166101011790555b610aa76040518060400160405280600b81526020016a11da1bdcdd13585c9ad95d60aa1b815250604051806040016040528060018152602001601960f91b81525061106a565b600080610c9284846110f4565b915091506000610ca185610f5d565b90506000610cae85610f5d565b600083815261012f602052604080822054838352908220549293509190610cd78989858561118d565b90506000816020015111610d1f5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b6044820152606401610361565b600080610d2f8989858e8e611211565b8a5191935091506001600160e01b0319166355575f5d60e11b1415610dbf5781341015610d9e5760405162461bcd60e51b815260206004820152601d60248201527f6d616b653a206e6f7420656e6f756768204261736543757272656e63790000006044820152606401610361565b81341115610dba57610dba610db38334613cb3565b3390611346565b610e3e565b87516001600160e01b0319166355575f5d60e11b1415610e3e5780341015610e295760405162461bcd60e51b815260206004820152601d60248201527f74616b653a206e6f7420656e6f756768204261736543757272656e63790000006044820152606401610361565b80341115610e3e57610e3e610db38234613cb3565b8a5133906001600160a01b03168114610e71576020840151610e609087613c5c565b600089815261012f60205260409020555b8a516001600160a01b03828116911614610ea2578351610e919086613c5c565b600088815261012f60205260409020555b8b518b516020868101518751604080518e81529384018d90526001600160a01b0395861684820152949093166060830152608082015260a081019190915290517f0c0792d64a63025aad5946328f2bee95ed6f94d57160e5449513ecd215a074a69181900360c00190a1505050505050505050505050565b610ab981604051602401610f2e91906138ee565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526113fa565b805160208201515160009190610f729061141b565b606084015151610f819061141b565b608080860151604080516001600160a01b039096166020870152850193909352606084019190915282015260a0015b604051602081830303815290604052805190602001209050919050565b6105e18282604051602401610fe39291906139f9565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526113fa565b6105e18282604051602401611028929190613a23565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526113fa565b61106082611478565b6105e18282611536565b600054610100900460ff1680611083575060005460ff16155b61109f5760405162461bcd60e51b815260040161036190613a45565b600054610100900460ff161580156110c1576000805461ffff19166101011790555b825160208085019190912083519184019190912060c99190915560ca558015610be3576000805461ff0019169055505050565b6110fc6130e5565b6111046130e5565b60208401515160608401515161111a91906116e4565b80519092506001600160e01b0319166111455760405162461bcd60e51b815260040161036190613ac8565b60608401515160208401515161115b91906116e4565b80519091506001600160e01b0319166111865760405162461bcd60e51b815260040161036190613ac8565b9250929050565b6111956130fd565b6000806111a28786611726565b915091506000806111b38887611726565b91509150838111156111e6576111db84848a60200151602001518b606001516020015161176a565b945050505050611209565b6112028960200151602001518a606001516020015184846117e5565b9450505050505b949350505050565b600080600061122888600001518860000151611862565b8651602088015190945092509050600061124186611933565b9050600061124e86611933565b9050600183600281111561127257634e487b7160e01b600052602160045260246000fd5b14156112c75787518751611299919084848e8e600080516020613d698339815191526119e9565b94506112c289896020015188600001518560000151600080516020613e09833981519152611a65565b611339565b60028360028111156112e957634e487b7160e01b600052602160045260246000fd5b1415611339576113148860200151876000015183858d8f600080516020613e098339815191526119e9565b885188518351929650611339928d929190600080516020613d69833981519152611a65565b5050509550959350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611393576040519150601f19603f3d011682016040523d82523d6000602084013e611398565b606091505b5050905080610be35760405162461bcd60e51b815260206004820152602860248201527f4c69625472616e73666572204261736543757272656e6379207472616e7366656044820152671c8819985a5b195960c21b6064820152608401610361565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8051602080830151805190820120604051600093610fb0937f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c939192019283526001600160e01b0319919091166020830152604082015260600190565b60a0810151158061148c5750428160a00151105b6114d85760405162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c65640000006044820152606401610361565b60c081015115806114ec5750428160c00151115b610ab95760405162461bcd60e51b815260206004820152601b60248201527a13dc99195c88195b99081d985b1a59185d1a5bdb8819985a5b1959602a1b6044820152606401610361565b81516001600160a01b0316336001600160a01b0316146105e157600061155b83611be5565b83519091506001600160a01b03163b15611665578251630b135d3f60e11b906001600160a01b0316631626ba7e61159184611cbd565b856040518363ffffffff1660e01b81526004016115af9291906139a1565b60206040518083038186803b1580156115c757600080fd5b505afa1580156115db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ff919061356b565b6001600160e01b03191614610be35760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163743a207369676e617475726520766572696669636174696f6e6044820152651032b93937b960d11b6064820152608401610361565b82516001600160a01b03166116838361167d84611cbd565b90611ddb565b6001600160a01b031614610be35760405162461bcd60e51b815260206004820152602260248201527f557365723a207369676e617475726520766572696669636174696f6e2065727260448201526137b960f11b6064820152608401610361565b6116ec6130e5565b60006116f88484611e87565b80519091506001600160e01b03191661171d576117158385611e87565b915050611720565b90505b92915050565b600080611744838560600151602001516120cd90919063ffffffff16565b9050611761846020015160200151856060015160200151836120d9565b91509250929050565b6117726130fd565b600061177f8585856120d9565b9050858111156117cc5760405162461bcd60e51b8152602060048201526018602482015277199a5b1b1319599d0e881d5b98589b19481d1bc8199a5b1b60421b6044820152606401610361565b5050604080518082019091529384525050602082015290565b6117ed6130fd565b60006117fa8387876120d9565b9050838111156118485760405162461bcd60e51b8152602060048201526019602482015278199a5b1b149a59da1d0e881d5b98589b19481d1bc8199a5b1b603a1b6044820152606401610361565b604080518082019091529283526020830152509392505050565b60006001600160e01b031983166355575f5d60e11b141561188557506001611720565b6001600160e01b031982166355575f5d60e11b14156118a657506002611720565b6001600160e01b031983166322ba176160e21b14156118c757506001611720565b6001600160e01b031982166322ba176160e21b14156118e857506002611720565b6001600160e01b0319831663025ceed960e61b141561190957506001611720565b6001600160e01b0319821663025ceed960e61b141561192a57506002611720565b50600092915050565b61193b613117565b60e08201516001600160e01b031916632611a13360e11b141561198457611966826101000151612138565b80515190915061197f57815161197c9082612154565b90505b919050565b60e08201516001600160e01b031990811614156119a757815161197c9082612154565b60405162461bcd60e51b8152602060048201526017602482015276556e6b6e6f776e204f726465722064617461207479706560481b6044820152606401610361565b60006119fd88610161548860200151612229565b90506000611a0e828a8a88876122ba565b9050611a1e8585838c8c886123a3565b9050611a3285828b8a602001518c886124f2565b9050611a4685828b89602001518c886124f2565b9050611a5985828a896000015187611a65565b50979650505050505050565b6000805b8351811015611b8b576000611abb858381518110611a9757634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316886125d090919063ffffffff16565b9050611b04858381518110611ae057634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316846125e290919063ffffffff16565b92508015611b7857611b7860405180604001604052808a81526020018381525087878581518110611b4557634e487b7160e01b600052603260045260246000fd5b602002602001015160000151877fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e6125ee565b5080611b8381613cf6565b915050611a69565b508061271014611bdd5760405162461bcd60e51b815260206004820152601e60248201527f53756d207061796f75747320427073206e6f7420657175616c203130302500006044820152606401610361565b505050505050565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d8260000151611c1a8460200151612991565b8460400151611c2c8660600151612991565b608087015160a088015160c089015160e08a01516101008b01518051602091820120604051610fb09b9a999897969594939201998a526001600160a01b0398891660208b015260408a0197909752949096166060880152608087019290925260a086015260c085015260e08401929092526001600160e01b0319919091166101008301526101208201526101400190565b604080518082018252600b81526a11da1bdcdd13585c9ad95d60aa1b6020918201528151808301835260018152601960f91b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8183018190527ff7645354abf2b8319c9979d69e838e27128975fec6da6f7d8206f207bba6d37b8285018190527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5606084018190524660808501523060a0808601919091528651808603909101815260c08501875280519086012061190160f01b60e086015260e285018190526101028086018990528751808703909101815261012290950190965283519390940192909220600094929392905b9695505050505050565b600080600080845160411415611e055750505060208201516040830151606084015160001a611e7b565b845160401415611e335750505060408201516020830151906001600160ff1b0381169060ff1c601b01611e7b565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610361565b611dd1868285856129e7565b611e8f6130e5565b825182516001600160e01b031982166355575f5d60e11b1415611efa576001600160e01b031981166355575f5d60e11b1415611ecf578492505050611720565b5050604080518082018252600080825282516020818101909452908152918101919091529050611720565b6001600160e01b031982166322ba176160e21b1415611f3f576001600160e01b031981166322ba176160e21b1415611ecf57611f368585612b81565b92505050611720565b6001600160e01b031982166339d690a360e11b1415611f7b576001600160e01b031981166339d690a360e11b1415611ecf57611f368585612b81565b6001600160e01b0319821663025ceed960e61b1415611fb7576001600160e01b0319811663025ceed960e61b1415611ecf57611f368585612b81565b6001600160e01b031982166000908152606560205260409020546001600160a01b0316801561206c576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb09061200e9089908990600401613af4565b60006040518083038186803b15801561202657600080fd5b505afa15801561203a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261206291908101906135f6565b9350505050611720565b6001600160e01b0319838116908316141561208b576120628686612b81565b60405162461bcd60e51b81526020600482015260176024820152763737ba103337bab7321024a0b9b9b2ba26b0ba31b432b960491b6044820152606401610361565b600061171d8284613cb3565b60006120e6848484612bde565b156121245760405162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b6044820152606401610361565b611209836121328685612c7e565b90612c8a565b612140613117565b8180602001905181019061172091906136ad565b61215c613117565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161217357905050905083816000815181106121be57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506127108160008151811061220657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160601b0392909216910152825250919050565b600061223f61223885856125d0565b85906125e2565b905060005b82518110156122b25761229e61229784838151811061227357634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316876125d090919063ffffffff16565b83906125e2565b9150806122aa81613cf6565b915050612244565b509392505050565b60008060006122cd888861016154612c96565b909250905080156123985784516000906001600160e01b0319166322ba176160e21b141561231457856020015180602001905181019061230d91906133f0565b905061234d565b85516001600160e01b03191663025ceed960e61b141561234d5760008660200151806020019051810190612348919061340c565b509150505b6123966040518060400160405280888152602001848152508861236f84612cb8565b887ff87e69cb514f255f3d32f9d90f25160a10d0cdefe6618a6406db334d4450595c6125ee565b505b509695505050505050565b845184906001600160e01b03191663025ceed960e61b148015906123d9575085516001600160e01b0319166339d690a360e11b14155b156123e357611dd1565b60008087602001518060200190518101906123fe919061340c565b91509150600061240e8383612cf6565b905060005b81518110156124e457600080612455878b86868151811061244457634e487b7160e01b600052603260045260246000fd5b602002602001015160200151612c96565b909750879250905080156124cf576124cf60405180604001604052808f8152602001838152508a86868151811061249c57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518b7fb3c5c697ec0b511b76d12f6293e6ee827b1e1df79ac7c64d0466d945904893d76125ee565b505080806124dc90613cf6565b915050612413565b505050509695505050505050565b8460005b845181101561239857600080612541848989868151811061252757634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316612c96565b909450849250905080156125bb576125bb60405180604001604052808c8152602001838152508789868151811061258857634e487b7160e01b600052603260045260246000fd5b602002602001015160000151887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf9556125ee565b505080806125c890613cf6565b9150506124f6565b600061171d6127106121328585612c7e565b600061171d8284613c5c565b8451516001600160e01b0319166355575f5d60e11b1415612627576020850151612622906001600160a01b03851690611346565b61294b565b8451516001600160e01b0319166322ba176160e21b14156126f357600085600001516020015180602001905181019061266091906133f0565b6322ba176160e21b60005260976020908152600080516020613d89833981519152549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916126bb9185918a918a91906004016139cf565b600060405180830381600087803b1580156126d557600080fd5b505af11580156126e9573d6000803e3d6000fd5b505050505061294b565b8451516001600160e01b0319166339d690a360e11b14156128065760008086600001516020015180602001905181019061272d919061340c565b91509150866020015160011461277a5760405162461bcd60e51b815260206004820152601260248201527132b9319b9918903b30b63ab29032b93937b960711b6044820152606401610361565b6339d690a360e11b6000526097602052600080516020613da983398151915254604051637b84dc8360e11b81526001600160a01b039091169063f709b906906127cd9085908a908a9087906004016139cf565b600060405180830381600087803b1580156127e757600080fd5b505af11580156127fb573d6000803e3d6000fd5b50505050505061294b565b8451516001600160e01b03191663025ceed960e61b14156128ca57600080866000015160200151806020019051810190612840919061340c565b63025ceed960e61b600090815260976020908152600080516020613de983398151915254908b0151604051639c1c2ee960e01b81526001600160a01b0380871660048301528c811660248301528b8116604483015260648201869052608482019290925260c060a482015260c4810193909352939550919350911690639c1c2ee99060e4016127cd565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf19061291890889088908890600401613b19565b600060405180830381600087803b15801561293257600080fd5b505af1158015612946573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051612982959493929190613b4c565b60405180910390a15050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b086129c1836000015161141b565b602080850151604051610fb0949392019283526020830191909152604082015260600190565b60006fa2a8918ca85bafe22016d0b997e4df60600160ff1b03821115612a5a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610361565b8360ff16601b1480612a6f57508360ff16601c145b612ac65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610361565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612b1a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612b785760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610361565b95945050505050565b612b896130e5565b60208084015180519082012083820151805192019190912080821415612bb3578492505050611720565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b600082612c205760405162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b6044820152606401610361565b811580612c2b575083155b15612c3857506000612c77565b60008380612c5657634e487b7160e01b600052601260045260246000fd5b8584099050612c658584612c7e565b612c71826103e8612c7e565b10159150505b9392505050565b600061171d8284613c94565b600061171d8284613c74565b600080612cac85612ca786866125d0565b612e37565b91509150935093915050565b6001600160a01b03808216600090815261016360205260408120549091168015612ce25792915050565b5050610162546001600160a01b0316919050565b6040516301ffc9a760e01b81526060906001600160a01b038416906301ffc9a790612d45907fe42093a63818e0c931c15fda9036d0d8995a638e7acfabc8355a4789766e8de9906004016139ba565b60206040518083038186803b158015612d5d57600080fd5b505afa158015612d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d959190613533565b15612e1857604051635d9dd7eb60e11b81526004810183905283906001600160a01b0382169063bb3bafd69060240160006040518083038186803b158015612ddc57600080fd5b505afa158015612df0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117159190810190613483565b612e2183612e5f565b1561172057612e308383612ee7565b9050611720565b60008082841115612e5657612e4c84846120cd565b9150829050611186565b50600093915050565b6040516301ffc9a760e01b815260009081906001600160a01b038416906301ffc9a790612e979063152a902d60e11b906004016139ba565b60206040518083038186803b158015612eaf57600080fd5b505afa158015612ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c779190613533565b60405163152a902d60e11b815260048101829052620f424060248201526060906001600160a01b03841690632a55205a90604401604080518083038186803b158015612f3257600080fd5b505afa925050508015612f62575060408051601f3d908101601f19168201909252612f5f91810190613471565b60015b612f9f576040805160008082526020820190925290612f97565b612f84613131565b815260200190600190039081612f7c5790505b509050611720565b611f36828260608082612fb3579050611720565b6000620f4240612fc4856064613c94565b612fce9190613c74565b612fd9906064613c94565b9050612710811061302c5760405162461bcd60e51b815260206004820181905260248201527f526f79616c7469657320323938312067726561746572207468616e20313030256044820152606401610361565b60408051600180825281830190925290816020015b613049613131565b815260200190600190039081613041579050509150848260008151811061308057634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160601b0316826000815181106130cf57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101510152509392505050565b60408051808201909152600081526060602082015290565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b803561197f81613d3d565b600082601f830112613163578081fd5b8151602061317861317383613c12565b613be2565b80838252828201915082860187848660061b8901011115613197578586fd5b855b858110156131f557604080838b0312156131b1578788fd5b6131b9613b97565b83516131c481613d3d565b8152838701516001600160601b03811681146131de57898afd5b818801528552938501939190910190600101613199565b5090979650505050505050565b803561197f81613d52565b600082601f83011261321d578081fd5b813561322b61317382613c35565b81815284602083860101111561323f578283fd5b816020850160208301379081016020019190915292915050565b60006040828403121561326a578081fd5b613272613b97565b905081356001600160401b038082111561328b57600080fd5b908301906040828603121561329f57600080fd5b6132a7613b97565b82356132b281613d52565b81526020830135828111156132c657600080fd5b6132d28782860161320d565b6020830152508084525050506020820135602082015292915050565b60006101208284031215613300578081fd5b613308613bbf565b905061331382613148565b815260208201356001600160401b038082111561332f57600080fd5b61333b85838601613259565b602084015261334c60408501613148565b6040840152606084013591508082111561336557600080fd5b61337185838601613259565b60608401526080840135608084015260a084013560a084015260c084013560c08401526133a060e08501613202565b60e0840152610100915081840135818111156133bb57600080fd5b6133c78682870161320d565b8385015250505092915050565b6000602082840312156133e5578081fd5b8135612c7781613d3d565b600060208284031215613401578081fd5b8151612c7781613d3d565b6000806040838503121561341e578081fd5b825161342981613d3d565b6020939093015192949293505050565b6000806040838503121561344b578182fd5b823561345681613d3d565b9150602083013561346681613d3d565b809150509250929050565b6000806040838503121561341e578182fd5b60006020808385031215613495578182fd5b82516001600160401b038111156134aa578283fd5b8301601f810185136134ba578283fd5b80516134c861317382613c12565b80828252848201915084840188868560061b87010111156134e7578687fd5b8694505b83851015611a5957604080828b031215613503578788fd5b61350b613b97565b825161351681613d3d565b8152828801518882015284526001959095019492860192016134eb565b600060208284031215613544578081fd5b81518015158114612c77578182fd5b600060208284031215613564578081fd5b5035919050565b60006020828403121561357c578081fd5b8151612c7781613d52565b60008060408385031215613599578182fd5b823561345681613d52565b600080600080608085870312156135b9578182fd5b84356135c481613d3d565b935060208501356135d481613d3d565b92506040850135915060608501356135eb81613d3d565b939692955090935050565b60006020808385031215613608578182fd5b82516001600160401b038082111561361e578384fd5b9084019060408287031215613631578384fd5b613639613b97565b825161364481613d52565b81528284015182811115613656578586fd5b80840193505086601f84011261366a578485fd5b8251915061367a61317383613c35565b828152878584860101111561368d578586fd5b61369c83868301878701613cca565b938101939093525090949350505050565b6000602082840312156136be578081fd5b81516001600160401b03808211156136d4578283fd5b90830190604082860312156136e7578283fd5b6136ef613b97565b8251828111156136fd578485fd5b61370987828601613153565b82525060208301518281111561371d578485fd5b61372987828601613153565b60208301525095945050505050565b600060208284031215613749578081fd5b81356001600160401b0381111561375e578182fd5b611209848285016132ee565b6000806000806080858703121561377f578182fd5b84356001600160401b0380821115613795578384fd5b6137a1888389016132ee565b955060208701359150808211156137b6578384fd5b6137c28883890161320d565b945060408701359150808211156137d7578384fd5b6137e3888389016132ee565b935060608701359150808211156137f8578283fd5b506138058782880161320d565b91505092959194509250565b60008060408385031215613823578182fd5b82356001600160401b0380821115613839578384fd5b613845868387016132ee565b9350602085013591508082111561385a578283fd5b50613867858286016132ee565b9150509250929050565b60008151808452613889816020860160208601613cca565b601f01601f19169290920160200192915050565b63ffffffff60e01b815116825260006020820151604060208501526112096040850182613871565b60008151604084526138da604085018261389d565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b8281101561394d57815180516001600160a01b0316855286015186850152928401929085019060010161391f565b5091979650505050505050565b8481526001600160a01b03841660208201526080604082018190526000906139849083018561389d565b8281036060840152613996818561389d565b979650505050505050565b8281526040602082015260006112096040830184613871565b6001600160e01b031991909116815260200190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b604081526000613a0c6040830185613871565b905060018060a01b03831660208301529392505050565b604081526000613a366040830185613871565b90508260208301529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b604081526000613b07604083018561389d565b8281036020840152612b78818561389d565b606081526000613b2c60608301866138c5565b6001600160a01b0394851660208401529290931660409091015292915050565b60a081526000613b5f60a08301886138c5565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b604080519081016001600160401b0381118282101715613bb957613bb9613d27565b60405290565b60405161012081016001600160401b0381118282101715613bb957613bb9613d27565b604051601f8201601f191681016001600160401b0381118282101715613c0a57613c0a613d27565b604052919050565b60006001600160401b03821115613c2b57613c2b613d27565b5060051b60200190565b60006001600160401b03821115613c4e57613c4e613d27565b50601f01601f191660200190565b60008219821115613c6f57613c6f613d11565b500190565b600082613c8f57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613cae57613cae613d11565b500290565b600082821015613cc557613cc5613d11565b500390565b60005b83811015613ce5578181015183820152602001613ccd565b8381111561096c5750506000910152565b6000600019821415613d0a57613d0a613d11565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ab957600080fd5b6001600160e01b031981168114610ab957600080fdfe1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c94532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc030a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d58be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044ba2646970667358221220310449ceaf531b1d9ac80d0412293dfa7ca8965aa4ffd7b1cc9e32908987ca7664736f6c63430008040033";

export class TestExchangeV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestExchangeV2> {
    return super.deploy(overrides || {}) as Promise<TestExchangeV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestExchangeV2 {
    return super.attach(address) as TestExchangeV2;
  }
  connect(signer: Signer): TestExchangeV2__factory {
    return super.connect(signer) as TestExchangeV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExchangeV2Interface {
    return new utils.Interface(_abi) as TestExchangeV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExchangeV2 {
    return new Contract(address, _abi, signerOrProvider) as TestExchangeV2;
  }
}

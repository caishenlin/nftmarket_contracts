/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestExchangeV2,
  TestExchangeV2Interface,
} from "../TestExchangeV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "__ExchangeV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct GhostMarketRoyalties.Royalty[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
    ],
    name: "matchAndTransferExternal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613d57806100206000396000f3fe6080604052600436106100d95760003560e01c806302097ab1146100de5780631cdfe3d81461012b57806320158c441461014d57806330c642f1146101895780633408e470146101a95780633abf6fd4146101bc578063715018a6146101dd57806376f64a1d146101f2578063787dce3d146102125780638da5cb5b1461023257806399a06b6a14610247578063b0e21e8a1461025a578063b39deb4614610271578063bb3bafd614610291578063e2864fe3146102bf578063e66db25e146102df578063e99a3f80146102ff578063f2fde38b14610312575b600080fd5b3480156100ea57600080fd5b506101156100f93660046132e8565b610163602052600090815260409020546001600160a01b031681565b6040516101229190613802565b60405180910390f35b34801561013757600080fd5b5061014b6101463660046132e8565b610332565b005b34801561015957600080fd5b5061017b610168366004613467565b61012f6020526000908152604090205481565b604051908152602001610122565b34801561019557600080fd5b5061014b6101a436600461349b565b61038d565b3480156101b557600080fd5b504661017b565b3480156101c857600080fd5b5061016254610115906001600160a01b031681565b3480156101e957600080fd5b5061014b61042a565b3480156101fe57600080fd5b5061014b61020d3660046134b8565b610491565b34801561021e57600080fd5b5061014b61022d366004613467565b610593565b34801561023e57600080fd5b506101156105c8565b61014b610255366004613725565b6105d7565b34801561026657600080fd5b5061017b6101615481565b34801561027d57600080fd5b5061014b61028c36600461349b565b6105e5565b34801561029d57600080fd5b506102b26102ac366004613467565b50606090565b6040516101229190613816565b3480156102cb57600080fd5b5061014b6102da36600461364c565b610676565b3480156102eb57600080fd5b5061014b6102fa36600461334d565b610787565b61014b61030d36600461367e565b6107e5565b34801561031e57600080fd5b5061014b61032d3660046132e8565b61092b565b3361033b6105c8565b6001600160a01b03161461036a5760405162461bcd60e51b81526004016103619061395b565b60405180910390fd5b61016280546001600160a01b0319166001600160a01b0392909216919091179055565b336103966105c8565b6001600160a01b0316146103bc5760405162461bcd60e51b81526004016103619061395b565b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c31535939061041e908490613802565b60405180910390a25050565b336104336105c8565b6001600160a01b0316146104595760405162461bcd60e51b81526004016103619061395b565b6033546040516000916001600160a01b031690600080516020613cc2833981519152908390a3603380546001600160a01b0319169055565b600054610100900460ff16806104aa575060005460ff16155b6104c65760405162461bcd60e51b81526004016103619061390d565b600054610100900460ff161580156104e8576000805461ffff19166101011790555b6104f0610a09565b6104f8610a75565b6097602052600080516020613c8283398151915280546001600160a01b038681166001600160a01b031992831617909255600080516020613ca283398151915280549288169282168317905563025ceed960e61b600052600080516020613ce2833981519152805490911690911790556105728383610b11565b61057a610ba1565b801561058c576000805461ff00191690555b5050505050565b3361059c6105c8565b6001600160a01b0316146105c25760405162461bcd60e51b81526004016103619061395b565b61016155565b6033546001600160a01b031690565b6105e18282610c3e565b5050565b336105ee6105c8565b6001600160a01b0316146106145760405162461bcd60e51b81526004016103619061395b565b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f9061041e908490613802565b61067f33610e73565b80516001600160a01b0316336001600160a01b0316146106cf5760405162461bcd60e51b815260206004820152600b60248201526a3737ba10309036b0b5b2b960a91b6044820152606401610361565b60808101516107175760405162461bcd60e51b81526020600482015260146024820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b6044820152606401610361565b600061072282610eb6565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e9361077b938693929161386e565b60405180910390a15050565b336107906105c8565b6001600160a01b0316146107b65760405162461bcd60e51b81526004016103619061395b565b6001600160a01b0391821660009081526101636020526040902080546001600160a01b03191691909216179055565b6107ee33610e73565b6107f734610f26565b6108018484610f6b565b61080b8282610f6b565b60408401516001600160a01b0316156108935783604001516001600160a01b031682600001516001600160a01b0316146108935760405162461bcd60e51b815260206004820152602360248201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696044820152621b195960ea1b6064820152608401610361565b60408201516001600160a01b03161561091b5783600001516001600160a01b031682604001516001600160a01b03161461091b5760405162461bcd60e51b8152602060048201526024808201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616044820152631a5b195960e21b6064820152608401610361565b6109258483610c3e565b50505050565b336109346105c8565b6001600160a01b03161461095a5760405162461bcd60e51b81526004016103619061395b565b6001600160a01b0381166109bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610361565b6033546040516001600160a01b03808416921690600080516020613cc283398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1680610a22575060005460ff16155b610a3e5760405162461bcd60e51b81526004016103619061390d565b600054610100900460ff16158015610a60576000805461ffff19166101011790555b8015610a72576000805461ff00191690555b50565b600054610100900460ff1680610a8e575060005460ff16155b610aaa5760405162461bcd60e51b81526004016103619061390d565b600054610100900460ff16158015610acc576000805461ffff19166101011790555b603380546001600160a01b031916339081179091556040518190600090600080516020613cc2833981519152908290a3508015610a72576000805461ff001916905550565b600054610100900460ff1680610b2a575060005460ff16155b610b465760405162461bcd60e51b81526004016103619061390d565b600054610100900460ff16158015610b68576000805461ffff19166101011790555b61016183905561016280546001600160a01b0319166001600160a01b0384161790558015610b9c576000805461ff00191690555b505050565b600054610100900460ff1680610bba575060005460ff16155b610bd65760405162461bcd60e51b81526004016103619061390d565b600054610100900460ff16158015610bf8576000805461ffff19166101011790555b610a606040518060400160405280600b81526020016a11da1bdcdd13585c9ad95d60aa1b815250604051806040016040528060018152602001601960f91b815250610f7e565b600080610c4b8484611008565b915091506000610c5a85610eb6565b90506000610c6785610eb6565b600083815261012f602052604080822054838352908220549293509190610c90898985856110a1565b90506000816020015111610cd85760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b6044820152606401610361565b600080610ce88989858e8e611125565b8a5191935091506001600160e01b0319166355575f5d60e11b1415610d485781341015610d275760405162461bcd60e51b8152600401610361906139bc565b81341115610d4357610d43610d3c8334613bac565b339061125a565b610d97565b87516001600160e01b0319166355575f5d60e11b1415610d975780341015610d825760405162461bcd60e51b8152600401610361906139bc565b80341115610d9757610d97610d3c8234613bac565b8a5133906001600160a01b03168114610dca576020840151610db99087613b55565b600089815261012f60205260409020555b8a516001600160a01b03828116911614610dfb578351610dea9086613b55565b600088815261012f60205260409020555b8b518b516020868101518751604080518e81529384018d90526001600160a01b0395861684820152949093166060830152608082015260a081019190915290517f0c0792d64a63025aad5946328f2bee95ed6f94d57160e5449513ecd215a074a69181900360c00190a1505050505050505050505050565b610a7281604051602401610e879190613802565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b17905261130e565b805160208201515160009190610ecb9061132f565b606084015151610eda9061132f565b608080860151604080516001600160a01b039096166020870152850193909352606084019190915282015260a0015b604051602081830303815290604052805190602001209050919050565b610a7281604051602401610f3c91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905261130e565b610f748261138c565b6105e1828261144a565b600054610100900460ff1680610f97575060005460ff16155b610fb35760405162461bcd60e51b81526004016103619061390d565b600054610100900460ff16158015610fd5576000805461ffff19166101011790555b825160208085019190912083519184019190912060c99190915560ca558015610b9c576000805461ff0019169055505050565b611010612ff9565b611018612ff9565b60208401515160608401515161102e91906115f8565b80519092506001600160e01b0319166110595760405162461bcd60e51b815260040161036190613990565b60608401515160208401515161106f91906115f8565b80519091506001600160e01b03191661109a5760405162461bcd60e51b815260040161036190613990565b9250929050565b6110a9613011565b6000806110b6878661163a565b915091506000806110c7888761163a565b91509150838111156110fa576110ef84848a60200151602001518b606001516020015161167e565b94505050505061111d565b6111168960200151602001518a606001516020015184846116f9565b9450505050505b949350505050565b600080600061113c88600001518860000151611776565b8651602088015190945092509050600061115586611847565b9050600061116286611847565b9050600183600281111561118657634e487b7160e01b600052602160045260246000fd5b14156111db57875187516111ad919084848e8e600080516020613c628339815191526118fd565b94506111d689896020015188600001518560000151600080516020613d02833981519152611979565b61124d565b60028360028111156111fd57634e487b7160e01b600052602160045260246000fd5b141561124d576112288860200151876000015183858d8f600080516020613d028339815191526118fd565b88518851835192965061124d928d929190600080516020613c62833981519152611979565b5050509550959350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146112a7576040519150601f19603f3d011682016040523d82523d6000602084013e6112ac565b606091505b5050905080610b9c5760405162461bcd60e51b815260206004820152602860248201527f4c69625472616e73666572204261736543757272656e6379207472616e7366656044820152671c8819985a5b195960c21b6064820152608401610361565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8051602080830151805190820120604051600093610f09937f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c939192019283526001600160e01b0319919091166020830152604082015260600190565b60a081015115806113a05750428160a00151105b6113ec5760405162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c65640000006044820152606401610361565b60c081015115806114005750428160c00151115b610a725760405162461bcd60e51b815260206004820152601b60248201527a13dc99195c88195b99081d985b1a59185d1a5bdb8819985a5b1959602a1b6044820152606401610361565b81516001600160a01b0316336001600160a01b0316146105e157600061146f83611af9565b83519091506001600160a01b03163b15611579578251630b135d3f60e11b906001600160a01b0316631626ba7e6114a584611bd1565b856040518363ffffffff1660e01b81526004016114c39291906138b5565b60206040518083038186803b1580156114db57600080fd5b505afa1580156114ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611513919061347f565b6001600160e01b03191614610b9c5760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163743a207369676e617475726520766572696669636174696f6e6044820152651032b93937b960d11b6064820152608401610361565b82516001600160a01b03166115978361159184611bd1565b90611cef565b6001600160a01b031614610b9c5760405162461bcd60e51b815260206004820152602260248201527f557365723a207369676e617475726520766572696669636174696f6e2065727260448201526137b960f11b6064820152608401610361565b611600612ff9565b600061160c8484611d9b565b80519091506001600160e01b031916611631576116298385611d9b565b915050611634565b90505b92915050565b60008061165883856060015160200151611fe190919063ffffffff16565b905061167584602001516020015185606001516020015183611fed565b91509250929050565b611686613011565b6000611693858585611fed565b9050858111156116e05760405162461bcd60e51b8152602060048201526018602482015277199a5b1b1319599d0e881d5b98589b19481d1bc8199a5b1b60421b6044820152606401610361565b5050604080518082019091529384525050602082015290565b611701613011565b600061170e838787611fed565b90508381111561175c5760405162461bcd60e51b8152602060048201526019602482015278199a5b1b149a59da1d0e881d5b98589b19481d1bc8199a5b1b603a1b6044820152606401610361565b604080518082019091529283526020830152509392505050565b60006001600160e01b031983166355575f5d60e11b141561179957506001611634565b6001600160e01b031982166355575f5d60e11b14156117ba57506002611634565b6001600160e01b031983166322ba176160e21b14156117db57506001611634565b6001600160e01b031982166322ba176160e21b14156117fc57506002611634565b6001600160e01b0319831663025ceed960e61b141561181d57506001611634565b6001600160e01b0319821663025ceed960e61b141561183e57506002611634565b50600092915050565b61184f61302b565b60e08201516001600160e01b031916632611a13360e11b14156118985761187a82610100015161204c565b8051519091506118935781516118909082612068565b90505b919050565b60e08201516001600160e01b031990811614156118bb5781516118909082612068565b60405162461bcd60e51b8152602060048201526017602482015276556e6b6e6f776e204f726465722064617461207479706560481b6044820152606401610361565b60006119118861016154886020015161213d565b90506000611922828a8a88876121ce565b90506119328585838c8c886122b7565b905061194685828b8a602001518c88612406565b905061195a85828b89602001518c88612406565b905061196d85828a896000015187611979565b50979650505050505050565b6000805b8351811015611a9f5760006119cf8583815181106119ab57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316886124e490919063ffffffff16565b9050611a188583815181106119f457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316846124f690919063ffffffff16565b92508015611a8c57611a8c60405180604001604052808a81526020018381525087878581518110611a5957634e487b7160e01b600052603260045260246000fd5b602002602001015160000151877fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e612502565b5080611a9781613bef565b91505061197d565b508061271014611af15760405162461bcd60e51b815260206004820152601e60248201527f53756d207061796f75747320427073206e6f7420657175616c203130302500006044820152606401610361565b505050505050565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d8260000151611b2e84602001516128a5565b8460400151611b4086606001516128a5565b608087015160a088015160c089015160e08a01516101008b01518051602091820120604051610f099b9a999897969594939201998a526001600160a01b0398891660208b015260408a0197909752949096166060880152608087019290925260a086015260c085015260e08401929092526001600160e01b0319919091166101008301526101208201526101400190565b604080518082018252600b81526a11da1bdcdd13585c9ad95d60aa1b6020918201528151808301835260018152601960f91b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8183018190527ff7645354abf2b8319c9979d69e838e27128975fec6da6f7d8206f207bba6d37b8285018190527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5606084018190524660808501523060a0808601919091528651808603909101815260c08501875280519086012061190160f01b60e086015260e285018190526101028086018990528751808703909101815261012290950190965283519390940192909220600094929392905b9695505050505050565b600080600080845160411415611d195750505060208201516040830151606084015160001a611d8f565b845160401415611d475750505060408201516020830151906001600160ff1b0381169060ff1c601b01611d8f565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610361565b611ce5868285856128fb565b611da3612ff9565b825182516001600160e01b031982166355575f5d60e11b1415611e0e576001600160e01b031981166355575f5d60e11b1415611de3578492505050611634565b5050604080518082018252600080825282516020818101909452908152918101919091529050611634565b6001600160e01b031982166322ba176160e21b1415611e53576001600160e01b031981166322ba176160e21b1415611de357611e4a8585612a95565b92505050611634565b6001600160e01b031982166339d690a360e11b1415611e8f576001600160e01b031981166339d690a360e11b1415611de357611e4a8585612a95565b6001600160e01b0319821663025ceed960e61b1415611ecb576001600160e01b0319811663025ceed960e61b1415611de357611e4a8585612a95565b6001600160e01b031982166000908152606560205260409020546001600160a01b03168015611f80576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb090611f2290899089906004016139ed565b60006040518083038186803b158015611f3a57600080fd5b505afa158015611f4e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f76919081019061350a565b9350505050611634565b6001600160e01b03198381169083161415611f9f57611f768686612a95565b60405162461bcd60e51b81526020600482015260176024820152763737ba103337bab7321024a0b9b9b2ba26b0ba31b432b960491b6044820152606401610361565b60006116318284613bac565b6000611ffa848484612af2565b156120385760405162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b6044820152606401610361565b61111d836120468685612b92565b90612b9e565b61205461302b565b8180602001905181019061163491906135c1565b61207061302b565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161208757905050905083816000815181106120d257634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506127108160008151811061211a57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160601b0392909216910152825250919050565b600061215361214c85856124e4565b85906124f6565b905060005b82518110156121c6576121b26121ab84838151811061218757634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316876124e490919063ffffffff16565b83906124f6565b9150806121be81613bef565b915050612158565b509392505050565b60008060006121e1888861016154612baa565b909250905080156122ac5784516000906001600160e01b0319166322ba176160e21b14156122285785602001518060200190518101906122219190613304565b9050612261565b85516001600160e01b03191663025ceed960e61b1415612261576000866020015180602001905181019061225c9190613320565b509150505b6122aa6040518060400160405280888152602001848152508861228384612bcc565b887ff87e69cb514f255f3d32f9d90f25160a10d0cdefe6618a6406db334d4450595c612502565b505b509695505050505050565b845184906001600160e01b03191663025ceed960e61b148015906122ed575085516001600160e01b0319166339d690a360e11b14155b156122f757611ce5565b60008087602001518060200190518101906123129190613320565b9150915060006123228383612c0a565b905060005b81518110156123f857600080612369878b86868151811061235857634e487b7160e01b600052603260045260246000fd5b602002602001015160200151612baa565b909750879250905080156123e3576123e360405180604001604052808f8152602001838152508a8686815181106123b057634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518b7fb3c5c697ec0b511b76d12f6293e6ee827b1e1df79ac7c64d0466d945904893d7612502565b505080806123f090613bef565b915050612327565b505050509695505050505050565b8460005b84518110156122ac57600080612455848989868151811061243b57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160601b0316612baa565b909450849250905080156124cf576124cf60405180604001604052808c8152602001838152508789868151811061249c57634e487b7160e01b600052603260045260246000fd5b602002602001015160000151887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf955612502565b505080806124dc90613bef565b91505061240a565b60006116316127106120468585612b92565b60006116318284613b55565b8451516001600160e01b0319166355575f5d60e11b141561253b576020850151612536906001600160a01b0385169061125a565b61285f565b8451516001600160e01b0319166322ba176160e21b14156126075760008560000151602001518060200190518101906125749190613304565b6322ba176160e21b60005260976020908152600080516020613c82833981519152549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916125cf9185918a918a91906004016138e3565b600060405180830381600087803b1580156125e957600080fd5b505af11580156125fd573d6000803e3d6000fd5b505050505061285f565b8451516001600160e01b0319166339d690a360e11b141561271a576000808660000151602001518060200190518101906126419190613320565b91509150866020015160011461268e5760405162461bcd60e51b815260206004820152601260248201527132b9319b9918903b30b63ab29032b93937b960711b6044820152606401610361565b6339d690a360e11b6000526097602052600080516020613ca283398151915254604051637b84dc8360e11b81526001600160a01b039091169063f709b906906126e19085908a908a9087906004016138e3565b600060405180830381600087803b1580156126fb57600080fd5b505af115801561270f573d6000803e3d6000fd5b50505050505061285f565b8451516001600160e01b03191663025ceed960e61b14156127de576000808660000151602001518060200190518101906127549190613320565b63025ceed960e61b600090815260976020908152600080516020613ce283398151915254908b0151604051639c1c2ee960e01b81526001600160a01b0380871660048301528c811660248301528b8116604483015260648201869052608482019290925260c060a482015260c4810193909352939550919350911690639c1c2ee99060e4016126e1565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf19061282c90889088908890600401613a12565b600060405180830381600087803b15801561284657600080fd5b505af115801561285a573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051612896959493929190613a45565b60405180910390a15050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b086128d5836000015161132f565b602080850151604051610f09949392019283526020830191909152604082015260600190565b60006fa2a8918ca85bafe22016d0b997e4df60600160ff1b0382111561296e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610361565b8360ff16601b148061298357508360ff16601c145b6129da5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610361565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612a2e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612a8c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610361565b95945050505050565b612a9d612ff9565b60208084015180519082012083820151805192019190912080821415612ac7578492505050611634565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b600082612b345760405162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b6044820152606401610361565b811580612b3f575083155b15612b4c57506000612b8b565b60008380612b6a57634e487b7160e01b600052601260045260246000fd5b8584099050612b798584612b92565b612b85826103e8612b92565b10159150505b9392505050565b60006116318284613b8d565b60006116318284613b6d565b600080612bc085612bbb86866124e4565b612d4b565b91509150935093915050565b6001600160a01b03808216600090815261016360205260408120549091168015612bf65792915050565b5050610162546001600160a01b0316919050565b6040516301ffc9a760e01b81526060906001600160a01b038416906301ffc9a790612c59907fe42093a63818e0c931c15fda9036d0d8995a638e7acfabc8355a4789766e8de9906004016138ce565b60206040518083038186803b158015612c7157600080fd5b505afa158015612c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ca99190613447565b15612d2c57604051635d9dd7eb60e11b81526004810183905283906001600160a01b0382169063bb3bafd69060240160006040518083038186803b158015612cf057600080fd5b505afa158015612d04573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116299190810190613397565b612d3583612d73565b1561163457612d448383612dfb565b9050611634565b60008082841115612d6a57612d608484611fe1565b915082905061109a565b50600093915050565b6040516301ffc9a760e01b815260009081906001600160a01b038416906301ffc9a790612dab9063152a902d60e11b906004016138ce565b60206040518083038186803b158015612dc357600080fd5b505afa158015612dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8b9190613447565b60405163152a902d60e11b815260048101829052620f424060248201526060906001600160a01b03841690632a55205a90604401604080518083038186803b158015612e4657600080fd5b505afa925050508015612e76575060408051601f3d908101601f19168201909252612e7391810190613385565b60015b612eb3576040805160008082526020820190925290612eab565b612e98613045565b815260200190600190039081612e905790505b509050611634565b611e4a828260608082612ec7579050611634565b6000620f4240612ed8856064613b8d565b612ee29190613b6d565b612eed906064613b8d565b90506127108110612f405760405162461bcd60e51b815260206004820181905260248201527f526f79616c7469657320323938312067726561746572207468616e20313030256044820152606401610361565b60408051600180825281830190925290816020015b612f5d613045565b815260200190600190039081612f555790505091508482600081518110612f9457634e487b7160e01b600052603260045260246000fd5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160601b031682600081518110612fe357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101510152509392505050565b60408051808201909152600081526060602082015290565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b803561189381613c36565b600082601f830112613077578081fd5b8151602061308c61308783613b0b565b613adb565b80838252828201915082860187848660061b89010111156130ab578586fd5b855b8581101561310957604080838b0312156130c5578788fd5b6130cd613a90565b83516130d881613c36565b8152838701516001600160601b03811681146130f257898afd5b8188015285529385019391909101906001016130ad565b5090979650505050505050565b803561189381613c4b565b600082601f830112613131578081fd5b813561313f61308782613b2e565b818152846020838601011115613153578283fd5b816020850160208301379081016020019190915292915050565b60006040828403121561317e578081fd5b613186613a90565b905081356001600160401b038082111561319f57600080fd5b90830190604082860312156131b357600080fd5b6131bb613a90565b82356131c681613c4b565b81526020830135828111156131da57600080fd5b6131e687828601613121565b6020830152508084525050506020820135602082015292915050565b60006101208284031215613214578081fd5b61321c613ab8565b90506132278261305c565b815260208201356001600160401b038082111561324357600080fd5b61324f8583860161316d565b60208401526132606040850161305c565b6040840152606084013591508082111561327957600080fd5b6132858583860161316d565b60608401526080840135608084015260a084013560a084015260c084013560c08401526132b460e08501613116565b60e0840152610100915081840135818111156132cf57600080fd5b6132db86828701613121565b8385015250505092915050565b6000602082840312156132f9578081fd5b8135612b8b81613c36565b600060208284031215613315578081fd5b8151612b8b81613c36565b60008060408385031215613332578081fd5b825161333d81613c36565b6020939093015192949293505050565b6000806040838503121561335f578182fd5b823561336a81613c36565b9150602083013561337a81613c36565b809150509250929050565b60008060408385031215613332578182fd5b600060208083850312156133a9578182fd5b82516001600160401b038111156133be578283fd5b8301601f810185136133ce578283fd5b80516133dc61308782613b0b565b80828252848201915084840188868560061b87010111156133fb578687fd5b8694505b8385101561196d57604080828b031215613417578788fd5b61341f613a90565b825161342a81613c36565b8152828801518882015284526001959095019492860192016133ff565b600060208284031215613458578081fd5b81518015158114612b8b578182fd5b600060208284031215613478578081fd5b5035919050565b600060208284031215613490578081fd5b8151612b8b81613c4b565b600080604083850312156134ad578182fd5b823561336a81613c4b565b600080600080608085870312156134cd578182fd5b84356134d881613c36565b935060208501356134e881613c36565b92506040850135915060608501356134ff81613c36565b939692955090935050565b6000602080838503121561351c578182fd5b82516001600160401b0380821115613532578384fd5b9084019060408287031215613545578384fd5b61354d613a90565b825161355881613c4b565b8152828401518281111561356a578586fd5b80840193505086601f84011261357e578485fd5b8251915061358e61308783613b2e565b82815287858486010111156135a1578586fd5b6135b083868301878701613bc3565b938101939093525090949350505050565b6000602082840312156135d2578081fd5b81516001600160401b03808211156135e8578283fd5b90830190604082860312156135fb578283fd5b613603613a90565b825182811115613611578485fd5b61361d87828601613067565b825250602083015182811115613631578485fd5b61363d87828601613067565b60208301525095945050505050565b60006020828403121561365d578081fd5b81356001600160401b03811115613672578182fd5b61111d84828501613202565b60008060008060808587031215613693578182fd5b84356001600160401b03808211156136a9578384fd5b6136b588838901613202565b955060208701359150808211156136ca578384fd5b6136d688838901613121565b945060408701359150808211156136eb578384fd5b6136f788838901613202565b9350606087013591508082111561370c578283fd5b5061371987828801613121565b91505092959194509250565b60008060408385031215613737578182fd5b82356001600160401b038082111561374d578384fd5b61375986838701613202565b9350602085013591508082111561376e578283fd5b5061377b85828601613202565b9150509250929050565b6000815180845261379d816020860160208601613bc3565b601f01601f19169290920160200192915050565b63ffffffff60e01b8151168252600060208201516040602085015261111d6040850182613785565b60008151604084526137ee60408501826137b1565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b8281101561386157815180516001600160a01b03168552860151868501529284019290850190600101613833565b5091979650505050505050565b8481526001600160a01b0384166020820152608060408201819052600090613898908301856137b1565b82810360608401526138aa81856137b1565b979650505050505050565b82815260406020820152600061111d6040830184613785565b6001600160e01b031991909116815260200190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b6020808252601790820152766e6f7420656e6f756768204261736543757272656e637960481b604082015260600190565b604081526000613a0060408301856137b1565b8281036020840152612a8c81856137b1565b606081526000613a2560608301866137d9565b6001600160a01b0394851660208401529290931660409091015292915050565b60a081526000613a5860a08301886137d9565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b604080519081016001600160401b0381118282101715613ab257613ab2613c20565b60405290565b60405161012081016001600160401b0381118282101715613ab257613ab2613c20565b604051601f8201601f191681016001600160401b0381118282101715613b0357613b03613c20565b604052919050565b60006001600160401b03821115613b2457613b24613c20565b5060051b60200190565b60006001600160401b03821115613b4757613b47613c20565b50601f01601f191660200190565b60008219821115613b6857613b68613c0a565b500190565b600082613b8857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613ba757613ba7613c0a565b500290565b600082821015613bbe57613bbe613c0a565b500390565b60005b83811015613bde578181015183820152602001613bc6565b838111156109255750506000910152565b6000600019821415613c0357613c03613c0a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610a7257600080fd5b6001600160e01b031981168114610a7257600080fdfe1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c94532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc030a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d58be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044ba2646970667358221220a3880d940e06465569ac64d29ec288955b3cb16b3ec36d92f92e7991e3812c7664736f6c63430008040033";

export class TestExchangeV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestExchangeV2> {
    return super.deploy(overrides || {}) as Promise<TestExchangeV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestExchangeV2 {
    return super.attach(address) as TestExchangeV2;
  }
  connect(signer: Signer): TestExchangeV2__factory {
    return super.connect(signer) as TestExchangeV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExchangeV2Interface {
    return new utils.Interface(_abi) as TestExchangeV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExchangeV2 {
    return new Contract(address, _abi, signerOrProvider) as TestExchangeV2;
  }
}
